{"version":3,"file":"static/webpack/static\\development\\pages\\dev\\blog\\[id].js.5d3224a14dfbf852255b.hot-update.js","sources":["webpack:///./components/Posts/PostView/PostView.tsx","webpack:///./components/Utterances/Utterances.tsx"],"sourcesContent":["import { Dispatch, SetStateAction } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AxiosError } from 'axios';\r\nimport { breakpoints } from '../../../lib/styles/responsive';\r\nimport { Post } from '../../../store/modules/post';\r\nimport { AsyncState } from '../../../lib/Utils/asyncUtils';\r\nimport { PostHeader, PostContent } from '.';\r\nimport Utterances from '../../Utterances/Utterances';\r\n\r\ntype PostViewProps = {\r\n  postData: AsyncState<{\r\n    res: Post;\r\n    resId: string;\r\n}, AxiosError<any>>;\r\n\teditMode: boolean;\r\n\tisLogged: boolean;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>; \r\n\treqDeletePost: () =>  void;\r\n};\r\n\r\nexport default function PostView({ \r\n\tpostData, \r\n\tisLogged, \r\n\tsetEditMode, \r\n\teditMode, \r\n\treqDeletePost \r\n}: PostViewProps) {\r\n\tconst { loading } = postData;\r\n\tconst { date, title, imgUrl, rawContent, id } = postData.data.res;\r\n\tif (loading) return null;\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<PostHeader\r\n\t\t\t\t\tdate={date} \r\n\t\t\t\t\tisLogged={isLogged}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tsetEditMode={setEditMode}\r\n\t\t\t\t\treqDeletePost={reqDeletePost}\r\n\t\t\t\t/>\r\n\t\t\t\t<PostContent\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\timgUrl={imgUrl}\r\n\t\t\t\t\trawContent={rawContent}\r\n\t\t\t\t/>\r\n\t\t\t\t<Utterances />\r\n\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n\r\nconst Layout = styled.div`\r\n\twidth: calc(100% - 10rem);\r\n\tmargin: auto;\r\n\tmin-height: 70rem;\r\n\tpadding: 2rem;\r\n\tmargin-top: 20rem;\r\n\t@media screen and (max-width: ${breakpoints.medium}) {\r\n\t\twidth: calc(100% - 4rem);\r\n\t}\r\n`;","import React, { useEffect } from \"react\";\r\n\r\nconst src = \"https://utteranc.es/client.js\";\r\nconst branch = \"master\";\r\nconst repo = \"wakie92/blog_comments\";\r\n\r\nconst Utterances = () => {\r\n  const rootElm = React.createRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    const utterances: HTMLScriptElement = document.createElement(\"script\");\r\n\r\n    const config = {\r\n      src,\r\n      repo,\r\n      branch,\r\n      label: \"comment\",\r\n      \"issue-term\": \"pathname\",\r\n      theme: \"github-light\",\r\n      crossorigin: \"anoymous\",\r\n      async: true,\r\n    };\r\n\r\n    Object.keys(config).forEach((configKey) => {\r\n      utterances.setAttribute(configKey, utterances[configKey]);\r\n    });\r\n\r\n    rootElm.current.appendChild(utterances);\r\n  }, []);\r\n\r\n  return <div className=\"utternces\" ref={rootElm} />;\r\n};\r\n\r\nexport default Utterances;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;AAEA;AAGA;AACA;AAaA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAUA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACpDA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AADA;AACA;AAGA;AAlBA;AAqBA;AAAA;AAAA;AAAA;AAxBA;AACA;AA0BA;;;;A","sourceRoot":""}