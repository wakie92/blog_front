{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { call, put } from 'redux-saga/effects';\n\nfunction isPayloadAction(action) {\n  return action.payload !== undefined;\n}\n\nexport default function createAsyncSaga(asyncActionCreator, promiseCreator) {\n  return (\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function saga(action) {\n      var result;\n      return _regeneratorRuntime.wrap(function saga$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!isPayloadAction(action)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return call(promiseCreator, action.payload);\n\n            case 4:\n              _context.t0 = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.next = 9;\n              return call(promiseCreator);\n\n            case 9:\n              _context.t0 = _context.sent;\n\n            case 10:\n              result = _context.t0;\n              _context.next = 13;\n              return put(asyncActionCreator.success(result));\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t1 = _context[\"catch\"](0);\n              _context.next = 19;\n              return put(asyncActionCreator.failure(_context.t1));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, saga, null, [[0, 15]]);\n    })\n  );\n}","map":null,"metadata":{},"sourceType":"module"}