{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { getType } from 'typesafe-actions';\nexport var asyncState = {\n  initial: function initial(initialData) {\n    return {\n      loading: false,\n      data: initialData || null,\n      error: null\n    };\n  },\n  loading: function loading(data) {\n    return {\n      loading: true,\n      data: data || null,\n      error: null\n    };\n  },\n  success: function success(data) {\n    return {\n      loading: false,\n      data: data,\n      error: null\n    };\n  },\n  error: function error(_error) {\n    return {\n      loading: false,\n      data: null,\n      error: _error\n    };\n  }\n};\nexport function transformToArray(asyncActionCreator) {\n  var request = asyncActionCreator.request,\n      success = asyncActionCreator.success,\n      failure = asyncActionCreator.failure;\n  return [request, success, failure];\n}\nexport var handleAsyncActions = function handleAsyncActions(type, key) {\n  return function (state, action) {\n    var _transformToArray$map = transformToArray(type).map(getType),\n        _transformToArray$map2 = _slicedToArray(_transformToArray$map, 3),\n        request = _transformToArray$map2[0],\n        success = _transformToArray$map2[1],\n        failure = _transformToArray$map2[2];\n\n    switch (action.type) {\n      case request:\n        return _objectSpread({}, state, _defineProperty({}, key, asyncState.loading()));\n\n      case success:\n        return _objectSpread({}, state, _defineProperty({}, key, asyncState.success(action.payload)));\n\n      case failure:\n        return _objectSpread({}, state, _defineProperty({}, key, asyncState.error(action.payload)));\n\n      default:\n        return state;\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/lib/Utils/asyncUtils.ts"],"names":["asyncState","initial","loading","data","initialData","error","success","request","failure","asyncActionCreator","handleAsyncActions","transformToArray","action"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAA,OAAA,QAAA,kBAAA;AAMA,OAAO,IAAMA,UAAU,GAAG;AACxBC,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,WAAA,EAAA;AAAA,WAAoD;AAC3DC,MAAAA,OAAO,EADoD,KAAA;AAE3DC,MAAAA,IAAI,EAAEC,WAAW,IAF0C,IAAA;AAG3DC,MAAAA,KAAK,EAAE;AAHoD,KAApD;AADe,GAAA;AAMxBH,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,IAAA,EAAA;AAAA,WAA6C;AACpDA,MAAAA,OAAO,EAD6C,IAAA;AAEpDC,MAAAA,IAAI,EAAEA,IAAI,IAF0C,IAAA;AAGpDE,MAAAA,KAAK,EAAE;AAH6C,KAA7C;AANe,GAAA;AAWxBC,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,IAAA,EAAA;AAAA,WAA4C;AACnDJ,MAAAA,OAAO,EAD4C,KAAA;AAEnDC,MAAAA,IAAI,EAF+C,IAAA;AAGnDE,MAAAA,KAAK,EAAE;AAH4C,KAA5C;AAXe,GAAA;AAgBxBA,EAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,MAAA,EAAA;AAAA,WAAuC;AAC5CH,MAAAA,OAAO,EADqC,KAAA;AAE5CC,MAAAA,IAAI,EAFwC,IAAA;AAG5CE,MAAAA,KAAK,EAAEA;AAHqC,KAAvC;AAAA;AAhBiB,CAAnB;AAwBP,OAAO,SAAA,gBAAA,CAAA,kBAAA,EAEL;AAAA,MACQE,OADR,GACsCE,kBADtC,CAAA,OAAA;AAAA,MACiBH,OADjB,GACsCG,kBADtC,CAAA,OAAA;AAAA,MAC0BD,OAD1B,GACsCC,kBADtC,CAAA,OAAA;AAEA,SAAO,CAAA,OAAA,EAAA,OAAA,EAAP,OAAO,CAAP;AACD;AAED,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA,GAAA,EAG3B;AACL,SAAO,UAAA,KAAA,EAAA,MAAA,EAAiC;AAAA,QAAA,qBAAA,GACFC,gBAAgB,CAAhBA,IAAgB,CAAhBA,CAAAA,GAAAA,CADE,OACFA,CADE;AAAA,QAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,QAC/BJ,OAD+B,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QACtBD,OADsB,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QACbE,OADa,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEtC,YAAQI,MAAM,CAAd,IAAA;AACE,WAAA,OAAA;AACE,eAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,EAESZ,UAAU,CAFnB,OAESA,EAFT,CAAA,CAAA;;AAIF,WAAA,OAAA;AACE,eAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,EAESA,UAAU,CAAVA,OAAAA,CAAmBY,MAAM,CAFlC,OAESZ,CAFT,CAAA,CAAA;;AAIF,WAAA,OAAA;AACE,eAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,EAESA,UAAU,CAAVA,KAAAA,CAAiBY,MAAM,CAFhC,OAESZ,CAFT,CAAA,CAAA;;AAIF;AACE,eAAA,KAAA;AAjBJ;AAFF,GAAA;AAJK,CAAA","sourcesContent":["import { AnyAction } from 'redux';\r\nimport { getType, AsyncActionCreatorBuilder } from 'typesafe-actions';\r\nexport type AsyncState<T, E = any> = {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: E | null;\r\n};\r\nexport const asyncState = {\r\n  initial: <T, E = any>(initialData?: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: initialData || null,\r\n    error: null,\r\n  }),\r\n  loading: <T, E = any>(data?: T): AsyncState<T, E> => ({\r\n    loading: true,\r\n    data: data || null,\r\n    error: null\r\n  }),\r\n  success: <T, E = any>(data: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data,\r\n    error: null\r\n  }),\r\n  error: <T, E>(error: E): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n  })\r\n};\r\n\r\ntype AnyAsyncActionCreator = AsyncActionCreatorBuilder<any, any, any>;\r\nexport function transformToArray<AC extends AnyAsyncActionCreator>(\r\n  asyncActionCreator: AC,\r\n) {\r\n  const { request, success, failure } = asyncActionCreator;\r\n  return [request, success, failure];\r\n}\r\n\r\nexport const handleAsyncActions = <S, AC extends AnyAsyncActionCreator, K extends keyof S>(\r\n  type: AC,\r\n  key: K\r\n  ) => {\r\n  return (state: S, action: AnyAction) => {\r\n    const [request, success, failure] = transformToArray(type).map(getType);\r\n    switch (action.type) {\r\n      case request:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.loading(),\r\n        };\r\n      case success:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.success(action.payload),\r\n        };\r\n      case failure:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.error(action.payload),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}