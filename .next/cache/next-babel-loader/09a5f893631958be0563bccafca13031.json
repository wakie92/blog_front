{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getValue, addTagArr } from \"../../store/modules/postUI\";\nimport { Head } from \"../../components/Write\";\nimport SubTitleInput from \"../../components/Write/SubTItleInput\";\nimport TagAndImg from '../../components/Write/TagAndImg';\nimport { addPhoto } from \"../../lib/Utils/S3\";\n\nvar EditorHeaderContainer = function EditorHeaderContainer(_ref) {\n  var onChange = _ref.onChange,\n      onUpload = _ref.onUpload;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postWrite: state.postUI.postWrite\n    };\n  }),\n      postWrite = _useSelector.postWrite;\n\n  var handleTags = useCallback(function (e) {\n    if (e.keyCode === 188 && postWrite.tag !== ',') {\n      dispatch(addTagArr());\n    }\n  }, [dispatch, postWrite.tag]);\n  var reqImgUpload = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var bucketData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addPhoto(e);\n\n            case 2:\n              bucketData = _context.sent;\n\n              if (typeof bucketData === 'string') {\n                dispatch(getValue({\n                  name: 'imgUrl',\n                  value: bucketData\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  var reqGetImgUrl = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(e) {\n      var bucketData, imgMarkdown;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return addPhoto(e);\n\n            case 2:\n              bucketData = _context2.sent;\n\n              if (typeof bucketData === 'string') {\n                imgMarkdown = \"![](\".concat(bucketData, \")\");\n                dispatch(getValue({\n                  name: 'inputValue',\n                  value: \"\".concat(postWrite.inputValue, \" \").concat(imgMarkdown)\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [dispatch, postWrite.inputValue]);\n  console.log(postWrite);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    onUpload: onUpload,\n    title: postWrite.title,\n    onChange: onChange,\n    reqImgUpload: reqImgUpload\n  }), __jsx(SubTitleInput, {\n    subTitle: postWrite.subTitle,\n    onChange: onChange\n  }), __jsx(TagAndImg, {\n    reqGetImgUrl: reqGetImgUrl,\n    tag: postWrite.tag,\n    tagArr: postWrite.tagArr,\n    onChange: onChange,\n    onAddTag: handleTags\n  }));\n};\n\nexport default EditorHeaderContainer;","map":null,"metadata":{},"sourceType":"module"}