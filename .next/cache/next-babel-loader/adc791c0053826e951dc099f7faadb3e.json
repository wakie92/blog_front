{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(postSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getOnePostSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(putSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteSaga);\n\nimport { getPostsListAsync, GET_POSTS_LIST, EDIT_POST, putPostAsync, postAsync, UPDATE_POST, getPostAsync, GET_POST, deletePostAsync, DELETE_POST } from './actions';\nimport { GetPostsList, PostUpdate, GetPost, PutPost, DeletePost } from '../../../lib/api/apis';\nimport { takeEvery, takeLatest } from 'redux-saga/effects';\nimport createAsyncSaga from '../../../lib/Utils/createAsyncSaga';\nvar deletePostSaga = createAsyncSaga(deletePostAsync, DeletePost);\nvar putPostSaga = createAsyncSaga(putPostAsync, PutPost);\nvar postUpdateSaga = createAsyncSaga(postAsync, PostUpdate);\nvar getPostsListSaga = createAsyncSaga(getPostsListAsync, GetPostsList);\nvar getPostSaga = createAsyncSaga(getPostAsync, GetPost);\nexport function updateSaga() {\n  return _regeneratorRuntime.wrap(function updateSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest(UPDATE_POST, postUpdateSaga);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(GET_POSTS_LIST, getPostsListSaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function getOnePostSaga() {\n  return _regeneratorRuntime.wrap(function getOnePostSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(GET_POST, getPostSaga);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function putSaga() {\n  return _regeneratorRuntime.wrap(function putSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(EDIT_POST, putPostSaga);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function deleteSaga() {\n  return _regeneratorRuntime.wrap(function deleteSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(DELETE_POST, deletePostSaga);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/store/modules/post/saga.ts"],"names":["updateSaga","postSaga","getOnePostSaga","putSaga","deleteSaga","getPostsListAsync","GET_POSTS_LIST","EDIT_POST","putPostAsync","postAsync","UPDATE_POST","getPostAsync","GET_POST","deletePostAsync","DELETE_POST","GetPostsList","PostUpdate","GetPost","PutPost","DeletePost","takeEvery","takeLatest","createAsyncSaga","deletePostSaga","putPostSaga","postUpdateSaga","getPostsListSaga","getPostSaga"],"mappings":";;;;yBAuBiBA,U;;;yBAGAC,Q;;;yBAGAC,c;;;yBAGAC,O;;;yBAGAC,U;;AAnCjB,SACCC,iBADD,EAECC,cAFD,EAGCC,SAHD,EAICC,YAJD,EAKCC,SALD,EAMCC,WAND,EAOCC,YAPD,EAQCC,QARD,EASEC,eATF,EAUEC,WAVF,QAWO,WAXP;AAYA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,UAArD,QAAuE,uBAAvE;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAGA,IAAMC,cAAc,GAAGD,eAAe,CAACT,eAAD,EAAkBM,UAAlB,CAAtC;AACA,IAAMK,WAAW,GAAGF,eAAe,CAACd,YAAD,EAAeU,OAAf,CAAnC;AACA,IAAMO,cAAc,GAAGH,eAAe,CAACb,SAAD,EAAYO,UAAZ,CAAtC;AACA,IAAMU,gBAAgB,GAAGJ,eAAe,CAACjB,iBAAD,EAAoBU,YAApB,CAAxC;AACA,IAAMY,WAAW,GAAGL,eAAe,CAACX,YAAD,EAAeM,OAAf,CAAnC;AAEA,OAAO,SAAUjB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAMqB,UAAU,CAACX,WAAD,EAAce,cAAd,CAAhB;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUxB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAMmB,SAAS,CAACd,cAAD,EAAiBoB,gBAAjB,CAAf;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUxB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAMmB,UAAU,CAACT,QAAD,EAAWe,WAAX,CAAhB;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUxB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAMkB,UAAU,CAACd,SAAD,EAAYiB,WAAZ,CAAhB;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUpB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMiB,UAAU,CAACP,WAAD,EAAcS,cAAd,CAAhB;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\r\n\tgetPostsListAsync,\r\n\tGET_POSTS_LIST,\r\n\tEDIT_POST,\r\n\tputPostAsync,\r\n\tpostAsync,\r\n\tUPDATE_POST,\r\n\tgetPostAsync,\r\n\tGET_POST,\r\n  deletePostAsync,\r\n  DELETE_POST\r\n} from './actions';\r\nimport { GetPostsList, PostUpdate, GetPost, PutPost, DeletePost } from '../../../lib/api/apis';\r\nimport { takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport createAsyncSaga from '../../../lib/Utils/createAsyncSaga';\r\nimport { Post } from './types';\r\n\r\nconst deletePostSaga = createAsyncSaga(deletePostAsync, DeletePost);\r\nconst putPostSaga = createAsyncSaga(putPostAsync, PutPost);\r\nconst postUpdateSaga = createAsyncSaga(postAsync, PostUpdate);\r\nconst getPostsListSaga = createAsyncSaga(getPostsListAsync, GetPostsList);\r\nconst getPostSaga = createAsyncSaga(getPostAsync, GetPost);\r\n\r\nexport function* updateSaga() {\r\n\tyield takeLatest(UPDATE_POST, postUpdateSaga);\r\n}\r\nexport function* postSaga() {\r\n\tyield takeEvery(GET_POSTS_LIST, getPostsListSaga);\r\n}\r\nexport function* getOnePostSaga() {\r\n\tyield takeLatest(GET_POST, getPostSaga);\r\n}\r\nexport function* putSaga() {\r\n\tyield takeLatest(EDIT_POST, putPostSaga);\r\n}\r\nexport function* deleteSaga() {\r\n  yield takeLatest(DELETE_POST, deletePostSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}