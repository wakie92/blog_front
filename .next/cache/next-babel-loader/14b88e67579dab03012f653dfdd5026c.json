{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport showdown from 'showdown';\nimport '../../lib/styles/githubMarkdown.css';\nimport RenderMarkdownView from '../CommonUI/RenderMarkdownView';\n\nvar Preview = function Preview(_ref) {\n  var inputValue = _ref.inputValue,\n      mdRef = _ref.mdRef,\n      onChange = _ref.onChange;\n  var converter = new showdown.Converter();\n  var html = converter.makeHtml(inputValue);\n  useEffect(function () {\n    onChange(html);\n  }, [html]);\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    ref: mdRef\n  }, __jsx(RenderMarkdownView, {\n    html: inputValue\n  })));\n};\n\nexport default React.memo(Preview);\nvar Wrapper = styled.div.withConfig({\n  displayName: \"Preview__Wrapper\",\n  componentId: \"sc-5qj3yb-0\"\n})([\"padding:3rem 1rem;width:calc(50% - 2rem);background-color:white;overflow-y:scroll;word-break:break-all;white-space:normal;margin-left:1px;line-height:1.4;\"]);","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/components/Write/Preview.tsx"],"names":["Preview","inputValue","mdRef","onChange","converter","showdown","html","useEffect","React","Wrapper","styled"],"mappings":";AAAA,OAAA,KAAA,IAAA,SAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,OAAA,QAAA,MAAA,UAAA;AACA,OAAA,qCAAA;AACA,OAAA,kBAAA,MAAA,gCAAA;;AAOA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EAAmD;AAAA,MAAhDC,UAAgD,GAAA,IAAA,CAAhDA,UAAgD;AAAA,MAApCC,KAAoC,GAAA,IAAA,CAApCA,KAAoC;AAAA,MAA7BC,QAA6B,GAAA,IAAA,CAA7BA,QAA6B;AACjE,MAAMC,SAAS,GAAG,IAAIC,QAAQ,CAA9B,SAAkB,EAAlB;AACA,MAAMC,IAAI,GAAGF,SAAS,CAATA,QAAAA,CAAb,UAAaA,CAAb;AACAG,EAAAA,SAAS,CAAC,YAAM;AACdJ,IAAAA,QAAQ,CAARA,IAAQ,CAARA;AADO,GAAA,EAEN,CAFHI,IAEG,CAFM,CAATA;AAIA,SACE,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,OAAA,EAAA;AAAS,IAAA,GAAG,EAAEL;AAAd,GAAA,EACA,KAAA,CAAA,kBAAA,EAAA;AAAoB,IAAA,IAAI,EAAED;AAA1B,GAAA,CADA,CADF,CADF;AAPF,CAAA;;AAcA,eAAeO,KAAK,CAALA,IAAAA,CAAf,OAAeA,CAAf;AAEA,IAAMC,OAAO,GAAGC,MAAM,CAAT,GAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,kBAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAb,4JAAa,CAAGA,CAAhB","sourcesContent":["import React, { useEffect, createRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport showdown from 'showdown';\r\nimport '../../lib/styles/githubMarkdown.css';\r\nimport RenderMarkdownView from '../CommonUI/RenderMarkdownView';\r\n\r\ninterface PreviewProps {\r\n  inputValue: string;\r\n  onChange: (html: string) => void;\r\n  mdRef: React.RefObject<HTMLDivElement>;\r\n}\r\nconst Preview = ({ inputValue, mdRef, onChange }: PreviewProps) => {\r\n  const converter = new showdown.Converter();\r\n  const html = converter.makeHtml(inputValue);\r\n  useEffect(() => {\r\n    onChange(html);\r\n  }, [html]);\r\n \r\n  return (\r\n    <>\r\n      <Wrapper ref={mdRef}>\r\n      <RenderMarkdownView html={inputValue} /> \r\n      </Wrapper>\r\n  </>);\r\n}\r\nexport default React.memo(Preview)\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 3rem 1rem;\r\n  width: calc(50% - 2rem);\r\n  background-color: white;\r\n  overflow-y: scroll;\r\n  word-break: break-all;\r\n  white-space: normal;\r\n  margin-left: 1px;\r\n  line-height: 1.4;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}