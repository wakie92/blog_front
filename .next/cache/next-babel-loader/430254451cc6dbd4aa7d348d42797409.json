{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getValue, addTagArr } from \"../../store/modules/postUI\";\nimport { Head } from \"../../components/Write\";\nimport SubTitleInput from \"../../components/Write/SubTItleInput\";\nimport TagAndImg from '../../components/Write/TagAndImg';\nimport { addPhoto } from \"../../lib/Utils/S3\";\n\nconst EditorHeaderContainer = ({\n  onChange,\n  onUpload\n}) => {\n  const dispatch = useDispatch();\n  const {\n    postWrite\n  } = useSelector(state => ({\n    postWrite: state.postUI.postWrite\n  }));\n  const handleTags = useCallback(e => {\n    if (e.keyCode === 188 && postWrite.tag !== ',') {\n      dispatch(addTagArr());\n    }\n  }, [dispatch, postWrite.tag]);\n  const reqImgUpload = useCallback(async e => {\n    const bucketData = await addPhoto(e);\n\n    if (typeof bucketData === 'string') {\n      dispatch(getValue({\n        name: 'imgUrl',\n        value: bucketData\n      }));\n    }\n  }, [dispatch]);\n  const reqGetImgUrl = useCallback(async e => {\n    const bucketData = await addPhoto(e);\n\n    if (typeof bucketData === 'string') {\n      const imgMarkdown = `![](${bucketData})`;\n      dispatch(getValue({\n        name: 'inputValue',\n        value: `${postWrite.inputValue} ${imgMarkdown}`\n      }));\n    }\n  }, [dispatch, postWrite.inputValue]);\n  console.log(postWrite);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    onUpload: onUpload,\n    title: postWrite.title,\n    onChange: onChange,\n    reqImgUpload: reqImgUpload\n  }), __jsx(SubTitleInput, {\n    subTitle: postWrite.subTitle,\n    onChange: onChange\n  }), __jsx(TagAndImg, {\n    reqGetImgUrl: reqGetImgUrl,\n    tag: postWrite.tag,\n    tagArr: postWrite.tagArr,\n    onChange: onChange,\n    onAddTag: handleTags\n  }));\n};\n\nexport default EditorHeaderContainer;","map":null,"metadata":{},"sourceType":"module"}