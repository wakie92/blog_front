{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Editor, Preview } from '../../components/Write';\nimport { getValue, resetInputValue, setInputValues } from '../../store/modules/postUI';\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\nimport { putPostAsync } from '../../store/modules/post';\nimport { ROUTES } from '../../lib/Routes/Routes';\nimport { removeExp } from '../../lib/Utils/utils';\n\nvar EditContainer = function EditContainer(_ref) {\n  var editMode = _ref.editMode;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postWrite: state.postUI.postWrite,\n      post: state.post.post\n    };\n  }),\n      postWrite = _useSelector.postWrite,\n      post = _useSelector.post;\n\n  var router = useRouter();\n  var mdRef = useRef();\n  var handleChange = useCallback(function (e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    dispatch(getValue({\n      name: name,\n      value: value\n    }));\n  }, [dispatch]);\n  var handleConv = useCallback(function (html) {\n    dispatch(getValue({\n      name: 'mdValue',\n      value: html\n    }));\n  }, [dispatch]);\n  var onUpload = useCallback(function () {\n    var title = postWrite.title,\n        inputValue = postWrite.inputValue,\n        mdValue = postWrite.mdValue,\n        imgUrl = postWrite.imgUrl,\n        subTitle = postWrite.subTitle,\n        tagArr = postWrite.tagArr;\n    var _post$data = post.data,\n        res = _post$data.res,\n        resId = _post$data.resId;\n    var uploadDate = new Date().toISOString();\n    var withoutExp = removeExp(inputValue);\n    var dataForUpload = {\n      title: title,\n      rawContent: inputValue,\n      content: withoutExp,\n      contentMd: mdValue,\n      date: uploadDate,\n      imgUrl: imgUrl,\n      id: res.id,\n      subTitle: subTitle,\n      tagArr: tagArr\n    };\n    dispatch(putPostAsync.request({\n      post: dataForUpload,\n      id: resId\n    }));\n    router.push(ROUTES.home, ROUTES.home, {\n      shallow: true\n    });\n  }, [dispatch, postWrite]);\n  useEffect(function () {\n    mdRef.current.scrollTo(0, mdRef.current.scrollHeight);\n  }, [postWrite.inputValue]);\n  useEffect(function () {\n    var _post$data$res = post.data.res,\n        rawContent = _post$data$res.rawContent,\n        contentMd = _post$data$res.contentMd,\n        imgUrl = _post$data$res.imgUrl,\n        title = _post$data$res.title,\n        subTitle = _post$data$res.subTitle,\n        tagArr = _post$data$res.tagArr;\n    dispatch(setInputValues({\n      title: title,\n      inputValue: rawContent,\n      mdValue: contentMd,\n      imgUrl: imgUrl,\n      subTitle: subTitle,\n      tagArr: tagArr,\n      tag: ''\n    }));\n    return function () {\n      dispatch(resetInputValue());\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(EditBox, null, __jsx(EditPart, null, __jsx(EditorHeaderContainer, {\n    onChange: handleChange,\n    onUpload: onUpload\n  }), __jsx(Editor, {\n    inputValue: postWrite.inputValue,\n    onChange: handleChange\n  })), __jsx(Preview, {\n    inputValue: postWrite.inputValue,\n    mdRef: mdRef,\n    onChange: handleConv\n  })));\n};\n\nexport default React.memo(EditContainer);\nvar EditBox = styled.div.withConfig({\n  displayName: \"EditContainer__EditBox\",\n  componentId: \"zobh5v-0\"\n})([\"display:flex;height:94rem;justify-content:space-between;\"]);\nvar EditPart = styled.div.withConfig({\n  displayName: \"EditContainer__EditPart\",\n  componentId: \"zobh5v-1\"\n})([\"width:calc(50% - 1.6rem);\"]);","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/Edit/EditContainer.tsx"],"names":["EditContainer","editMode","dispatch","useDispatch","postWrite","post","useSelector","state","router","useRouter","mdRef","useRef","handleChange","useCallback","value","name","e","getValue","handleConv","html","onUpload","title","inputValue","mdValue","imgUrl","subTitle","tagArr","res","resId","uploadDate","withoutExp","removeExp","dataForUpload","rawContent","content","contentMd","date","id","ROUTES","shallow","useEffect","setInputValues","tag","resetInputValue","React","EditBox","styled","EditPart"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Editor, Preview } from '../../components/Write';\r\nimport { RootState } from '../../store/modules';\r\nimport { getValue, resetInputValue, setInputValues, } from '../../store/modules/postUI';\r\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\r\nimport { putPostAsync, Post } from '../../store/modules/post';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { removeExp } from '../../lib/Utils/utils';\r\n\r\ntype EditContainerProps = {\r\n  editMode: boolean;\r\n};\r\n\r\nconst EditContainer = ({ editMode }: EditContainerProps) => {\r\n  const dispatch = useDispatch();\r\n  const { postWrite, post } = useSelector((state: RootState) => ({\r\n    postWrite: state.postUI.postWrite,\r\n    post: state.post.post,\r\n  }))\r\n  const router = useRouter();\r\n  const mdRef = useRef<HTMLDivElement>();\r\n\r\n  const handleChange = useCallback((e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    dispatch(getValue({ name, value }));\r\n  }, [dispatch]);\r\n\r\n  const handleConv = useCallback((html: string) => {\r\n    dispatch(getValue({ name: 'mdValue', value: html}));\r\n  }, [dispatch]);\r\n\r\n  const onUpload = useCallback(() => {\r\n    const { title, inputValue, mdValue, imgUrl, subTitle, tagArr} = postWrite\r\n    const { res, resId } = post.data;\r\n    const uploadDate = new Date().toISOString();\r\n    const withoutExp = removeExp(inputValue);\r\n    const dataForUpload:Post = {\r\n      title: title,\r\n      rawContent: inputValue,\r\n      content: withoutExp,\r\n      contentMd: mdValue,\r\n      date: uploadDate,\r\n      imgUrl: imgUrl,\r\n      id: res.id,\r\n  \t\tsubTitle: subTitle,\r\n      tagArr: tagArr,\r\n    }\r\n    dispatch(putPostAsync.request({post: dataForUpload, id: resId}));\r\n    router.push(ROUTES.home, ROUTES.home, { shallow: true });\r\n  }, [dispatch, postWrite]);\r\n  \r\n\r\n  useEffect(() => {\r\n    mdRef.current.scrollTo(0, mdRef.current.scrollHeight);\r\n  }, [postWrite.inputValue])\r\n\r\n  useEffect(() => {\r\n    const { rawContent, contentMd, imgUrl, title, subTitle, tagArr } = post.data.res\r\n    dispatch(setInputValues({\r\n      title,\r\n      inputValue: rawContent,\r\n      mdValue:contentMd,\r\n      imgUrl, \r\n      subTitle,\r\n      tagArr,\r\n      tag: '', \r\n    }));\r\n    return () => {\r\n      dispatch(resetInputValue());\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <EditBox>\r\n        <EditPart>\r\n          <EditorHeaderContainer \r\n            onChange={handleChange}\r\n            onUpload={onUpload}\r\n          />\r\n          <Editor inputValue={postWrite.inputValue} onChange={handleChange} />\r\n        </EditPart>\r\n        <Preview inputValue={postWrite.inputValue} mdRef={mdRef} onChange={handleConv} />\r\n\t\t  </EditBox>\r\n    </>\r\n  ); \r\n}\r\n\r\nexport default React.memo(EditContainer);\r\nconst EditBox = styled.div`\r\n\tdisplay: flex;\r\n\theight: 94rem;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst EditPart = styled.div`width: calc(50% - 1.6rem);`;"]},"metadata":{},"sourceType":"module"}