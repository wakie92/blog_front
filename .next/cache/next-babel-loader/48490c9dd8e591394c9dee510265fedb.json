{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createReducer } from 'typesafe-actions';\nimport { GET_LOGIN_MODAL, GET_AUTH, INITIALIZE, IS_LOGGED } from './actions';\nconst initialState = {\n  isLoginModal: false,\n  email: '',\n  password: '',\n  isLogged: false\n};\nconst loginUI = createReducer(initialState, {\n  [IS_LOGGED]: (state, action) => {\n    return _objectSpread({}, state, {\n      isLogged: action.payload\n    });\n  },\n  [GET_LOGIN_MODAL]: state => {\n    return _objectSpread({}, state, {\n      isLoginModal: !state.isLoginModal\n    });\n  },\n  [GET_AUTH]: (state, action) => {\n    const {\n      name,\n      value\n    } = action.payload;\n    return _objectSpread({}, state, {\n      [name]: value\n    });\n  },\n  [INITIALIZE]: state => {\n    return _objectSpread({}, state, {\n      email: '',\n      password: ''\n    });\n  }\n});\nexport default loginUI;","map":null,"metadata":{},"sourceType":"module"}