{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { firebaseDB } from '../../config/init-firebase';\nvar db = firebaseDB().firestore();\nvar blogDB = db.collection(\"blogDB\");\nexport var GetPostsList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(cnt) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // const user = firebase.auth().currentUser\n            query = blogDB.orderBy(\"date\", \"desc\").limit(cnt);\n            _context.next = 3;\n            return query.get().then(function (querySnapshot) {\n              return querySnapshot.docs.map(function (data) {\n                var ele = _objectSpread({}, data.data(), {\n                  id: data.id\n                });\n\n                return ele;\n              });\n            })[\"catch\"](function (e) {\n              return console.log(e);\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GetPostsList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var PutPost =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref2) {\n    var post, id, query, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            post = _ref2.post, id = _ref2.id;\n            query = blogDB.doc(id);\n            _context2.next = 4;\n            return query.set(post).then(function (res) {\n              return 'success';\n            })[\"catch\"](function (err) {\n              return err;\n            });\n\n          case 4:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function PutPost(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var PostUpdate =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(data) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return blogDB.add(data).then(function (res) {\n              return res.id;\n            })[\"catch\"](function (err) {\n              return err;\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function PostUpdate(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var GetPost =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(index) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            query = blogDB.doc(index);\n            _context4.next = 3;\n            return query.get().then(function (doc) {\n              return {\n                res: _objectSpread({}, doc.data(), {\n                  id: doc.id\n                }),\n                resId: doc.id\n              };\n            });\n\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function GetPost(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var DeletePost =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            query = blogDB.doc(id);\n            _context5.next = 3;\n            return query[\"delete\"]().then(function () {\n              return 'success';\n            })[\"catch\"](function (err) {\n              return err;\n            });\n\n          case 3:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function DeletePost(_x5) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/lib/api/apis.ts"],"names":["db","firebaseDB","blogDB","GetPostsList","query","response","ele","data","id","console","PutPost","post","PostUpdate","res","GetPost","doc","resId","DeletePost"],"mappings":"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","sourcesContent":["import { Post, PutPostType } from './../../store/modules/post/types';\r\nimport { firebaseDB } from '../../config/init-firebase';\r\n\r\nconst db = firebaseDB().firestore();\r\nconst blogDB = db.collection(\"blogDB\");\r\n\r\nexport const GetPostsList = async <T>(cnt: number): Promise<T[]> => {\r\n\t// const user = firebase.auth().currentUser\r\n\tconst query = blogDB.orderBy(\"date\", \"desc\").limit(cnt);\r\n\tconst response: T[] = await query.get().then((querySnapshot) => {\r\n\t\t\treturn querySnapshot.docs.map((data) => {\r\n\t\t\t\tconst ele: T = { ...data.data(), id: data.id } as unknown as T;\r\n\t\t\t\treturn ele;\r\n\t\t\t});\r\n\t\t}).catch((e) =>  console.log(e)) as T[];\r\n\treturn response;\r\n};\r\n\r\nexport const PutPost = async ({post, id}: PutPostType) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.set(post).then((res) => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t});\r\n\treturn response.data;\r\n};\r\n\r\nexport const PostUpdate = async (data: Post) => {\r\n\tconst response: string = await blogDB.add(data)\r\n\t\t.then((res) => {\r\n\t\t\treturn res.id;\r\n\t\t}).catch((err) => {\r\n\t\t\treturn err;\r\n\t\t});\r\n\treturn response;\r\n};\r\n\r\nexport const GetPost = async (index: string) => {\r\n\tconst query = blogDB.doc(index);\r\n\tconst response = await query.get().then((doc) => {\r\n\t\treturn { \r\n\t\t\tres: { ...doc.data(), id: doc.id } as unknown as Post, \r\n\t\t\tresId: doc.id \r\n\t\t};\r\n\t});\r\n\treturn response;\t\r\n};\r\n\r\nexport const DeletePost = async (id: string) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.delete().then(() => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t})\r\n\treturn response;\r\n};\r\n\r\nexport type LoginType = {\r\n\tmessage: string;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}