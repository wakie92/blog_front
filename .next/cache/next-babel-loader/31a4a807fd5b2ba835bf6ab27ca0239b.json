{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport firebase from '../../config/init-firebase';\nexport const formatDate = dateData => {\n  const formatted = new Date(dateData);\n  const year = formatted.getFullYear();\n  let month = formatted.getMonth() + 1;\n  let day = formatted.getDate();\n  month = Number(month) < 10 ? `0${month}` : month;\n  day = Number(day) < 10 ? `0${day}` : day;\n  return `${year}년 ${month}월 ${day}일`;\n};\nexport const setItem = (key, obj) => {\n  return sessionStorage.setItem(key, _JSON$stringify(obj));\n};\nexport const getItem = key => {\n  return sessionStorage.getItem(JSON.parse(key));\n};\nexport const removeExp = str => {\n  const regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n\n  if (regExp.test(str)) {\n    const result = str.replace(regExp, '');\n    return result;\n  }\n\n  return str;\n};\nexport const logoutFn = () => {\n  firebase.auth().signOut().then(function () {\n    // Sign-out successful.\n    sessionStorage.removeItem(\"idToken\");\n  }).catch(function (error) {// An error happened.\n  });\n};\nexport const setCookie = (name, value, day) => {\n  const date = new Date();\n  date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\n  document.cookie = name + '=' + value + ';expires=' + date.toUTCString() + ';path=/';\n  console.log(document.cookie);\n};\nexport const deleteCookie = name => {\n  const date = new Date();\n  document.cookie = name + \"= \" + \"; expires=\" + date.toUTCString() + \"; path=/\";\n  console.log(\"delete\");\n};\nexport const checkUser = async () => {\n  const user = await firebase.auth().currentUser;\n  return user;\n};\nexport const loginEmail = (email, password) => {\n  const result = firebase.auth().signInWithEmailAndPassword(email, password).then(res => {\n    const token = _JSON$stringify(res.user);\n\n    setCookie(\"token\", token, 1);\n    sessionStorage.setItem(\"idToken\", token);\n    return res;\n  }).catch(err => console.log(err));\n  return result;\n};\nexport const checkLogin = () => {\n  const tokenObj = document.cookie;\n  const isToken = JSON.parse(tokenObj);\n  return isToken;\n};","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/lib/Utils/utils.ts"],"names":["firebase","formatDate","dateData","formatted","Date","year","getFullYear","month","getMonth","day","getDate","Number","setItem","key","obj","sessionStorage","getItem","JSON","parse","removeExp","str","regExp","test","result","replace","logoutFn","auth","signOut","then","removeItem","catch","error","setCookie","name","value","date","setTime","getTime","document","cookie","toUTCString","console","log","deleteCookie","checkUser","user","currentUser","loginEmail","email","password","signInWithEmailAndPassword","res","token","err","checkLogin","tokenObj","isToken"],"mappings":"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","sourcesContent":["import firebase, { provider } from '../../config/init-firebase';\r\n\r\nexport const formatDate = (dateData: string) => {\r\n  const formatted: Date = new Date(dateData);\r\n  const year: number = formatted.getFullYear();\r\n  let month: number | string = formatted.getMonth() + 1;\r\n  let day: number | string = formatted.getDate();\r\n  month = Number(month) < 10 ? `0${month}` : month;\r\n  day = Number(day) < 10 ? `0${day}` : day;\r\n\r\n  return `${year}년 ${month}월 ${day}일`;\r\n};  \r\n\r\nexport const setItem = (key: string, obj: object) => {\r\n  return sessionStorage.setItem(key, JSON.stringify(obj));\r\n};\r\n\r\nexport const getItem = (key: string) => {\r\n  return sessionStorage.getItem(JSON.parse(key));\r\n};\r\n\r\nexport const removeExp = (str: string) => {\r\n  const regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi\r\n  if(regExp.test(str)) {\r\n    const result = str.replace(regExp, '');\r\n    return result;\r\n  } return str;\r\n} \r\n\r\n\r\nexport const logoutFn = () => {\r\n  firebase.auth().signOut().then(function() {\r\n    // Sign-out successful.\r\n    sessionStorage.removeItem(\"idToken\");\r\n  }).catch(function(error) {\r\n    // An error happened.\r\n  });\r\n}\r\n\r\nexport const  setCookie = (name: string, value: any, day: number) => {\r\n  const date = new Date();\r\n  date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\r\n  document.cookie = name + '=' + value + ';expires=' + date.toUTCString() + ';path=/';\r\n  console.log(document.cookie);\r\n};\r\n\r\nexport const deleteCookie = (name: string) => {\r\n  const date = new Date();\r\n  document.cookie = name + \"= \" + \"; expires=\" + date.toUTCString() + \"; path=/\";\r\n  console.log(\"delete\");\r\n}\r\n\r\nexport const checkUser = async () => {\r\n  const user = await firebase.auth().currentUser;\r\n  return user;\r\n}\r\n\r\nexport const loginEmail = (email: string, password: string) => {\r\n  const result = firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((res) => {\r\n      const token = JSON.stringify(res.user);\r\n      setCookie(\"token\", token, 1);\r\n      sessionStorage.setItem(\"idToken\", token);\r\n      return res\r\n  }).catch(err =>  console.log(err));\r\n  return result;\r\n}\r\n\r\n\r\n\r\nexport const checkLogin = () => {\r\n  const tokenObj = document.cookie;\r\n  const isToken = JSON.parse(tokenObj)\r\n  return isToken;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}