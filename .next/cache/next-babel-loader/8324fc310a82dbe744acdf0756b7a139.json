{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { call, put } from 'redux-saga/effects';\n\nfunction isPayloadAction(action) {\n  return action.payload !== undefined;\n}\n\nexport default function createAsyncSaga(asyncActionCreator, promiseCreator) {\n  return (\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function saga(action) {\n      var result;\n      return _regeneratorRuntime.wrap(function saga$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!isPayloadAction(action)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return call(promiseCreator, action.payload);\n\n            case 4:\n              _context.t0 = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.next = 9;\n              return call(promiseCreator);\n\n            case 9:\n              _context.t0 = _context.sent;\n\n            case 10:\n              result = _context.t0;\n              _context.next = 13;\n              return put(asyncActionCreator.success(result));\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t1 = _context[\"catch\"](0);\n              _context.next = 19;\n              return put(asyncActionCreator.failure(_context.t1));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, saga, null, [[0, 15]]);\n    })\n  );\n}","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/lib/Utils/createAsyncSaga.ts"],"names":["call","put","isPayloadAction","action","payload","undefined","createAsyncSaga","asyncActionCreator","promiseCreator","saga","result","success","failure"],"mappings":";AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;;AAKA,SAASC,eAAT,CAA4BC,MAA5B,EAA6E;AAC5E,SAAOA,MAAM,CAACC,OAAP,KAAmBC,SAA1B;AACA;;AAED,eAAe,SAASC,eAAT,CACdC,kBADc,EAEdC,cAFc,EAGb;AACD;AAAA;AAAA,6BAAO,SAAUC,IAAV,CAAeN,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,mBAEUD,eAAe,CAAKC,MAAL,CAFzB;AAAA;AAAA;AAAA;;AAAA;AAGH,qBAAMH,IAAI,CAACQ,cAAD,EAAiBL,MAAM,CAACC,OAAxB,CAAV;;AAHG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIH,qBAAMJ,IAAI,CAACQ,cAAD,CAAV;;AAJG;AAAA;;AAAA;AAECE,cAAAA,MAFD;AAAA;AAKL,qBAAMT,GAAG,CAACM,kBAAkB,CAACI,OAAnB,CAA2BD,MAA3B,CAAD,CAAT;;AALK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOL,qBAAMT,GAAG,CAACM,kBAAkB,CAACK,OAAnB,aAAD,CAAT;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUH,IAAV;AAAA,KAAP;AAAA;AAUA","sourcesContent":["import { call, put } from 'redux-saga/effects';\r\nimport { AsyncActionCreatorBuilder, PayloadAction } from 'typesafe-actions';\r\n\r\ntype PromiseCreatorFunction<P, T> = ((payload: P) => Promise<T>) | (() => Promise<T>);\r\n\r\nfunction isPayloadAction<P>(action: any): action is PayloadAction<string, P> {\r\n\treturn action.payload !== undefined;\r\n}\r\n\r\nexport default function createAsyncSaga<T1, P1, T2, P2, T3, P3>(\r\n\tasyncActionCreator: AsyncActionCreatorBuilder<[T1, [P1, undefined]], [T2, [P2, undefined]], [T3, [P3, undefined]]>,\r\n\tpromiseCreator: PromiseCreatorFunction<P1, P2>\r\n) {\r\n\treturn function* saga(action: ReturnType<typeof asyncActionCreator.request>) {\r\n\t\ttry {\r\n\t\t\tconst result = isPayloadAction<P1>(action)\r\n\t\t\t? yield call(promiseCreator, action.payload)\r\n\t\t\t: yield call(promiseCreator);\r\n\t\t\tyield put(asyncActionCreator.success(result));\r\n\t\t} catch (e) {\r\n\t\t\tyield put(asyncActionCreator.failure(e));\r\n\t\t}\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}