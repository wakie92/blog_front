{"ast":null,"code":"import { createStore, applyMiddleware, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\n\nconst bindMiddleware = middleware => {\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      composeWithDevTools\n    } = require('redux-devtools-extension');\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(preloadedState, {\n  isServer,\n  req = null\n}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, preloadedState, bindMiddleware([sagaMiddleware]));\n\n  if (req || !isServer) {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  }\n\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}