{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Editor, Preview } from '../../components/Write';\nimport { getValue, resetInputValue, setInputValues } from '../../store/modules/postUI';\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\nimport { putPostAsync } from '../../store/modules/post';\nimport { ROUTES } from '../../lib/Routes/Routes';\nimport { removeExp } from '../../lib/Utils/utils';\n\nvar EditContainer = function EditContainer(_ref) {\n  var editMode = _ref.editMode;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postWrite: state.postUI.postWrite,\n      post: state.post.post\n    };\n  }),\n      postWrite = _useSelector.postWrite,\n      post = _useSelector.post;\n\n  var router = useRouter();\n  var mdRef = useRef();\n  var handleChange = useCallback(function (e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    dispatch(getValue({\n      name: name,\n      value: value\n    }));\n  }, [dispatch]);\n  var handleConv = useCallback(function (html) {\n    dispatch(getValue({\n      name: 'mdValue',\n      value: html\n    }));\n  }, [dispatch]);\n  var onUpload = useCallback(function () {\n    var title = postWrite.title,\n        inputValue = postWrite.inputValue,\n        mdValue = postWrite.mdValue,\n        imgUrl = postWrite.imgUrl,\n        subTitle = postWrite.subTitle,\n        tagArr = postWrite.tagArr;\n    var _post$data = post.data,\n        res = _post$data.res,\n        resId = _post$data.resId;\n    var uploadDate = new Date().toISOString();\n    var withoutExp = removeExp(inputValue);\n    var dataForUpload = {\n      title: title,\n      rawContent: inputValue,\n      content: withoutExp,\n      contentMd: mdValue,\n      date: uploadDate,\n      imgUrl: imgUrl,\n      id: res.id,\n      subTitle: subTitle,\n      tagArr: tagArr\n    };\n    dispatch(putPostAsync.request({\n      post: dataForUpload,\n      id: resId\n    }));\n    router.push(ROUTES.home, ROUTES.home, {\n      shallow: true\n    });\n  }, [dispatch, postWrite]);\n  useEffect(function () {\n    mdRef.current.scrollTo(0, mdRef.current.scrollHeight);\n  }, [postWrite.inputValue]);\n  useEffect(function () {\n    var _post$data$res = post.data.res,\n        rawContent = _post$data$res.rawContent,\n        contentMd = _post$data$res.contentMd,\n        imgUrl = _post$data$res.imgUrl,\n        title = _post$data$res.title,\n        subTitle = _post$data$res.subTitle,\n        tagArr = _post$data$res.tagArr;\n    dispatch(setInputValues({\n      title: title,\n      inputValue: rawContent,\n      mdValue: contentMd,\n      imgUrl: imgUrl,\n      subTitle: subTitle,\n      tagArr: tagArr,\n      tag: ''\n    }));\n    return function () {\n      dispatch(resetInputValue());\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(EditBox, null, __jsx(EditPart, null, __jsx(EditorHeaderContainer, {\n    onChange: handleChange,\n    onUpload: onUpload\n  }), __jsx(Editor, {\n    inputValue: postWrite.inputValue,\n    onChange: handleChange\n  })), __jsx(Preview, {\n    inputValue: postWrite.inputValue,\n    mdRef: mdRef,\n    onChange: handleConv\n  })));\n};\n\nexport default React.memo(EditContainer);\nvar EditBox = styled.div.withConfig({\n  displayName: \"EditContainer__EditBox\",\n  componentId: \"zobh5v-0\"\n})([\"display:flex;height:94rem;justify-content:space-between;\"]);\nvar EditPart = styled.div.withConfig({\n  displayName: \"EditContainer__EditPart\",\n  componentId: \"zobh5v-1\"\n})([\"width:calc(50% - 1.6rem);\"]);","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/Edit/EditContainer.tsx"],"names":["React","useCallback","useEffect","useRef","useRouter","styled","useSelector","useDispatch","Editor","Preview","getValue","resetInputValue","setInputValues","EditorHeaderContainer","putPostAsync","ROUTES","removeExp","EditContainer","editMode","dispatch","state","postWrite","postUI","post","router","mdRef","handleChange","e","target","value","name","handleConv","html","onUpload","title","inputValue","mdValue","imgUrl","subTitle","tagArr","data","res","resId","uploadDate","Date","toISOString","withoutExp","dataForUpload","rawContent","content","contentMd","date","id","request","push","home","shallow","current","scrollTo","scrollHeight","tag","memo","EditBox","div","EditPart"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Editor, Preview } from '../../components/Write';\r\nimport { RootState } from '../../store/modules';\r\nimport { getValue, resetInputValue, setInputValues, } from '../../store/modules/postUI';\r\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\r\nimport { putPostAsync, Post } from '../../store/modules/post';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { removeExp } from '../../lib/Utils/utils';\r\n\r\ntype EditContainerProps = {\r\n  editMode: boolean;\r\n};\r\n\r\nconst EditContainer = ({ editMode }: EditContainerProps) => {\r\n  const dispatch = useDispatch();\r\n  const { postWrite, post } = useSelector((state: RootState) => ({\r\n    postWrite: state.postUI.postWrite,\r\n    post: state.post.post,\r\n  }))\r\n  const router = useRouter();\r\n  const mdRef = useRef<HTMLDivElement>();\r\n\r\n  const handleChange = useCallback((e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    dispatch(getValue({ name, value }));\r\n  }, [dispatch]);\r\n\r\n  const handleConv = useCallback((html: string) => {\r\n    dispatch(getValue({ name: 'mdValue', value: html}));\r\n  }, [dispatch]);\r\n\r\n  const onUpload = useCallback(() => {\r\n    const { title, inputValue, mdValue, imgUrl, subTitle, tagArr} = postWrite\r\n    const { res, resId } = post.data;\r\n    const uploadDate = new Date().toISOString();\r\n    const withoutExp = removeExp(inputValue);\r\n    const dataForUpload:Post = {\r\n      title: title,\r\n      rawContent: inputValue,\r\n      content: withoutExp,\r\n      contentMd: mdValue,\r\n      date: uploadDate,\r\n      imgUrl: imgUrl,\r\n      id: res.id,\r\n  \t\tsubTitle: subTitle,\r\n      tagArr: tagArr,\r\n    }\r\n    dispatch(putPostAsync.request({post: dataForUpload, id: resId}));\r\n    router.push(ROUTES.home, ROUTES.home, { shallow: true });\r\n  }, [dispatch, postWrite]);\r\n  \r\n\r\n  useEffect(() => {\r\n    mdRef.current.scrollTo(0, mdRef.current.scrollHeight);\r\n  }, [postWrite.inputValue])\r\n\r\n  useEffect(() => {\r\n    const { rawContent, contentMd, imgUrl, title, subTitle, tagArr } = post.data.res\r\n    dispatch(setInputValues({\r\n      title,\r\n      inputValue: rawContent,\r\n      mdValue:contentMd,\r\n      imgUrl, \r\n      subTitle,\r\n      tagArr,\r\n      tag: '', \r\n    }));\r\n    return () => {\r\n      dispatch(resetInputValue());\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <EditBox>\r\n        <EditPart>\r\n          <EditorHeaderContainer \r\n            onChange={handleChange}\r\n            onUpload={onUpload}\r\n          />\r\n          <Editor inputValue={postWrite.inputValue} onChange={handleChange} />\r\n        </EditPart>\r\n        <Preview inputValue={postWrite.inputValue} mdRef={mdRef} onChange={handleConv} />\r\n\t\t  </EditBox>\r\n    </>\r\n  ); \r\n}\r\n\r\nexport default React.memo(EditContainer);\r\nconst EditBox = styled.div`\r\n\tdisplay: flex;\r\n\theight: 94rem;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst EditPart = styled.div`width: calc(50% - 1.6rem);`;"]},"metadata":{},"sourceType":"module"}