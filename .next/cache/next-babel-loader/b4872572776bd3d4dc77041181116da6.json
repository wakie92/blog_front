{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport { combineReducers } from 'redux';\nimport postUI from './postUI';\nimport { postSaga, updateSaga, getOnePostSaga, putSaga, deleteSaga } from './post';\nimport post from './post/reducers';\nimport loginUI from './loginUI';\nvar rootReducer = combineReducers({\n  postUI: postUI,\n  post: post,\n  loginUI: loginUI\n});\nexport default rootReducer;\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([postSaga(), updateSaga(), getOnePostSaga(), putSaga(), deleteSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/store/modules/index.ts"],"names":["rootReducer","combineReducers","postUI","post","loginUI","rootSaga","all","postSaga","updateSaga","getOnePostSaga","putSaga","deleteSaga"],"mappings":";;;;yBAiBiBK,Q;;AAjBjB,SAAA,GAAA,QAAA,oBAAA;AACA,SAAA,eAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,UAAA;AACA,SAAA,QAAA,EAAA,UAAA,EAAA,cAAA,EAAA,OAAA,EAAA,UAAA,QAAA,QAAA;AACA,OAAA,IAAA,MAAA,iBAAA;AACA,OAAA,OAAA,MAAA,WAAA;AAEA,IAAML,WAAW,GAAGC,eAAe,CAAC;AAClCC,EAAAA,MAAM,EAD4B,MAAA;AAElCC,EAAAA,IAAI,EAF8B,IAAA;AAGlCC,EAAAA,OAAO,EAAPA;AAHkC,CAAD,CAAnC;AAMA,eAAA,WAAA;AAIA,OAAO,SAAA,QAAA,GAAA;AAAA,SAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,SAAA,CAAA,QAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AACL,iBAAME,GAAG,CAAC,CAACC,QAAD,EAAA,EAAaC,UAAb,EAAA,EAA2BC,cAA3B,EAAA,EAA6CC,OAA7C,EAAA,EAAwDC,UAAlE,EAAU,CAAD,CAAT;;AADK,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,OAAA,CAAA;AAAA","sourcesContent":["import { all } from 'redux-saga/effects';\r\nimport { combineReducers } from 'redux';\r\nimport postUI  from './postUI';\r\nimport { postSaga, updateSaga, getOnePostSaga, putSaga, deleteSaga } from './post';\r\nimport post from './post/reducers';\r\nimport loginUI from './loginUI';\r\n\r\nconst rootReducer = combineReducers({\r\n  postUI,\r\n  post,\r\n  loginUI,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport function* rootSaga() {\r\n  yield all([postSaga(), updateSaga(), getOnePostSaga(), putSaga(), deleteSaga()]);\r\n}"]},"metadata":{},"sourceType":"module"}