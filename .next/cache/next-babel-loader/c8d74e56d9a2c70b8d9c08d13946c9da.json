{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { getPostAsync } from '../../../store/modules/post';\nimport Maybe from '../../../components/Maybe/Maybe';\nimport BlogPostContainer from '../../../containers/BlogPost/BlogPostContainer';\nimport { useSelector } from 'react-redux';\nimport EditContainer from '../../../containers/Edit/EditContainer';\nimport PostSeo from '../../../components/Posts/PostView/PostSeo';\n\nvar post = function post(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      editMode = _useState[0],\n      setEditMode = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postData: state.post.post\n    };\n  }),\n      postData = _useSelector.postData;\n\n  return __jsx(React.Fragment, null, __jsx(PostSeo, {\n    data: postData.data\n  }), __jsx(Maybe, {\n    isVisible: editMode\n  }, __jsx(EditContainer, {\n    editMode: editMode\n  })), __jsx(Maybe, {\n    isVisible: !editMode\n  }, __jsx(BlogPostContainer, {\n    editMode: editMode,\n    setEditMode: setEditMode\n  })));\n};\n\npost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var store, isServer, query, id;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref2.store, isServer = _ref2.isServer, query = _ref2.query;\n            id = query.id;\n\n            if (!isServer) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 5;\n            return store.dispatch(getPostAsync.request(id));\n\n          case 5:\n            return _context.abrupt(\"return\", {});\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default post;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/dev/blog/[id].tsx"],"names":["post","editMode","setEditMode","useState","postData","useSelector","state","data","store","isServer","query","id","getPostAsync"],"mappings":";;;;;AACA,SAAA,QAAA,QAAA,OAAA;AAEA,SAAA,YAAA,QAAA,6BAAA;AACA,OAAA,KAAA,MAAA,iCAAA;AACA,OAAA,iBAAA,MAAA,gDAAA;AAGA,SAAA,WAAA,QAAA,aAAA;AACA,OAAA,aAAA,MAAA,wCAAA;AACA,OAAA,OAAA,MAAA,4CAAA;;AAGA,IAAMA,IAAoB,GAAG,SAAvBA,IAAuB,CAAA,IAAA,EAAkB;AAAA,EAAA,yBAAA,CAAA,IAAA,CAAA;;AAAA,MAAA,SAAA,GACbG,QAAQ,CADK,KACL,CADK;AAAA,MACtCF,QADsC,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAC5BC,WAD4B,GAAA,SAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,YAAA,GAExBG,WAAW,CAAC,UAAA,KAAA,EAAA;AAAA,WAA0B;AACzDD,MAAAA,QAAQ,EAAEE,KAAK,CAALA,IAAAA,CAAWN;AADoC,KAA1B;AAFY,GAEb,CAFa;AAAA,MAErCI,QAFqC,GAAA,YAAA,CAAA,QAAA;;AAK7C,SACE,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,OAAA,EAAA;AACE,IAAA,IAAI,EAAEA,QAAQ,CAACG;AADjB,GAAA,CADF,EAIE,KAAA,CAAA,KAAA,EAAA;AAAO,IAAA,SAAS,EAAEN;AAAlB,GAAA,EACE,KAAA,CAAA,aAAA,EAAA;AAAe,IAAA,QAAQ,EAAEA;AAAzB,GAAA,CADF,CAJF,EAOE,KAAA,CAAA,KAAA,EAAA;AAAO,IAAA,SAAS,EAAE,CAACA;AAAnB,GAAA,EACE,KAAA,CAAA,iBAAA,EAAA;AAAmB,IAAA,QAAQ,EAA3B,QAAA;AAAuC,IAAA,WAAW,EAAEC;AAApD,GAAA,CADF,CAPF,CADF;AALF,CAAA;;AAoBAF,IAAI,CAAJA,eAAAA;AAAAA;AAAAA,YAAAA;AAAAA,MAAAA,KAAAA,GAAAA,iBAAAA;AAAAA;AAAAA,EAAAA,mBAAAA,CAAAA,IAAAA,CAAuB,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,QAAA,KAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA;AAAA,WAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,eAAA,CAAA;AAASQ,YAAAA,KAAT,GAAA,KAAA,CAAA,KAASA,EAAOC,QAAhB,GAAA,KAAA,CAAA,QAASD,EAAiBE,KAA1B,GAAA,KAAA,CAAA,KAASF;AACtBG,YAAAA,EADa,GACND,KADM,CAAA,EACbC;;AADa,gBAAA,CAAA,QAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;AAAA;;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,mBAGbH,KAAK,CAALA,QAAAA,CAAeI,YAAY,CAAZA,OAAAA,CAHF,EAGEA,CAAfJ,CAHa;;AAAA,eAAA,CAAA;AAAA,mBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAA,EAAA,CAAA;;AAAA,eAAA,CAAA;AAAA,eAAA,KAAA;AAAA,mBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,EAAA,OAAA,CAAA;AAAvBR,GAAAA,CAAAA,CAAAA;;AAAAA,SAAAA,UAAAA,EAAAA,EAAAA;AAAAA,WAAAA,KAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,SAAAA,CAAAA;AAAAA,GAAAA;AAAAA,CAAAA,EAAAA;;AAQA,eAAA,IAAA","sourcesContent":["\r\nimport { useState } from 'react';\r\nimport Head from 'next/head'\r\nimport { getPostAsync } from '../../../store/modules/post';\r\nimport Maybe from '../../../components/Maybe/Maybe';\r\nimport BlogPostContainer from '../../../containers/BlogPost/BlogPostContainer';\r\nimport { NextPageCustom, nextPageProps } from '../../../lib/types/nextCustomTypes';\r\nimport { RootState } from '../../../store/modules';\r\nimport { useSelector } from 'react-redux';\r\nimport EditContainer from '../../../containers/Edit/EditContainer';\r\nimport PostSeo from '../../../components/Posts/PostView/PostSeo';\r\n\r\ntype blogType = {};\r\nconst post: NextPageCustom = ({}: blogType) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { postData } = useSelector(( state : RootState ) => ({\r\n    postData: state.post.post\r\n  }))\r\n  return (\r\n    <>\r\n      <PostSeo\r\n        data={postData.data}\r\n      />\r\n      <Maybe isVisible={editMode}>\r\n        <EditContainer editMode={editMode} />\r\n      </Maybe>\r\n      <Maybe isVisible={!editMode}>\r\n        <BlogPostContainer editMode={editMode} setEditMode={setEditMode} />\r\n      </Maybe>\r\n    </>\r\n  );\r\n};\r\n\r\npost.getInitialProps = async ({ store, isServer, query  }: nextPageProps) => {\r\n  const { id } = query;\r\n  if(isServer) {\r\n    await store.dispatch(getPostAsync.request(id as string));\r\n  }\r\n  return { };\r\n};\r\n\r\nexport default post;"]},"metadata":{},"sourceType":"module"}