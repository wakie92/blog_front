{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { createStore, applyMiddleware, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (process.env.NODE_ENV !== 'production') {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore(preloadedState, _ref) {\n  var isServer = _ref.isServer,\n      _ref$req = _ref.req,\n      req = _ref$req === void 0 ? null : _ref$req;\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, preloadedState, bindMiddleware([sagaMiddleware]));\n\n  if (req || !isServer) {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  }\n\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}