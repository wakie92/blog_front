{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../lib/styles/global';\nexport default React.memo(function Editor(_ref) {\n  var inputValue = _ref.inputValue,\n      onChange = _ref.onChange;\n  return __jsx(TextArea, {\n    onChange: onChange,\n    value: inputValue,\n    name: \"inputValue\"\n  });\n}, function (preProps, nextProps) {\n  return preProps.inputValue === nextProps.inputValue;\n});\nvar TextArea = styled.textarea.withConfig({\n  displayName: \"Editor__TextArea\",\n  componentId: \"sc-1unxyh5-0\"\n})([\"width:calc(100% - 1.6rem);height:calc(100% - 1.6rem);font-size:1.6rem;padding:0.8rem;margin-right:1px;background-color:\", \";color:#fff;\"], colors.gray9);","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/components/Write/Editor.tsx"],"names":["inputValue","onChange","preProps","nextProps","TextArea","styled","colors"],"mappings":";AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,SAAA,MAAA,QAAA,yBAAA;AAMA,eAAe,KAAK,CAAL,IAAA,CAAW,SAAA,MAAA,CAAA,IAAA,EAAuD;AAAA,MAArCA,UAAqC,GAAA,IAAA,CAArCA,UAAqC;AAAA,MAAzBC,QAAyB,GAAA,IAAA,CAAzBA,QAAyB;AAChF,SAAO,KAAA,CAAA,QAAA,EAAA;AAAU,IAAA,QAAQ,EAAlB,QAAA;AAA8B,IAAA,KAAK,EAAnC,UAAA;AAAiD,IAAA,IAAI,EAAC;AAAtD,GAAA,CAAP;AADc,CAAA,EAEZ,UAAA,QAAA,EAAA,SAAA,EAAA;AAAA,SAAyBC,QAAQ,CAARA,UAAAA,KAAwBC,SAAS,CAA1D,UAAA;AAFH,CAAe,CAAf;AAIA,IAAMC,QAAQ,GAAGC,MAAM,CAAT,QAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,kBAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAA,yHAAA,EAAA,cAAA,CAAGA,EAMIC,MAAM,CAN3B,KAAiBD,CAAjB","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ninterface EditorProps {\r\n\tinputValue: string;\r\n\tonChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n}\r\nexport default React.memo(function Editor({ inputValue, onChange }: EditorProps) {\r\n\treturn <TextArea onChange={onChange} value={inputValue} name=\"inputValue\" />;\r\n}, (preProps, nextProps) => preProps.inputValue === nextProps.inputValue);\r\n\r\nconst TextArea = styled.textarea`\r\n\twidth: calc(100% - 1.6rem);\r\n\theight: calc(100% - 1.6rem);\r\n\tfont-size: 1.6rem;\r\n\tpadding: 0.8rem;\r\n\tmargin-right: 1px;\r\n\tbackground-color: ${colors.gray9};\r\n\tcolor: #fff;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}