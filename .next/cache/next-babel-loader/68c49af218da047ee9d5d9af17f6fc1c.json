{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport PostView from '../../components/Posts/PostView/PostView';\nimport { deletePostAsync } from '../../store/modules/post';\nimport Footer from '../../components/CommonUI/Footer';\n\nvar BlogPostContainer = function BlogPostContainer(_ref) {\n  var editMode = _ref.editMode,\n      setEditMode = _ref.setEditMode;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postData: state.post.post,\n      isLogged: state.loginUI.isLogged\n    };\n  }),\n      postData = _useSelector.postData,\n      isLogged = _useSelector.isLogged;\n\n  var router = useRouter();\n  var reqDeletePost = useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch(deletePostAsync.request(postData.data.resId));\n            _context.next = 7;\n            break;\n\n          case 4:\n            _context.prev = 4;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 4]]);\n  })), [dispatch]);\n  console.log(postData.data);\n  return __jsx(React.Fragment, null, __jsx(PostView, {\n    isLogged: isLogged,\n    reqDeletePost: reqDeletePost,\n    postData: postData,\n    editMode: editMode,\n    setEditMode: setEditMode\n  }), __jsx(Footer, null));\n};\n\nexport default BlogPostContainer;","map":null,"metadata":{},"sourceType":"module"}