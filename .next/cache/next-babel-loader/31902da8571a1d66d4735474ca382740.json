{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport PostView from '../../components/Posts/PostView/PostView';\nimport { deletePostAsync } from '../../store/modules/post';\nimport Footer from '../../components/CommonUI/Footer';\n\nvar BlogPostContainer = function BlogPostContainer(_ref) {\n  var editMode = _ref.editMode,\n      setEditMode = _ref.setEditMode;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postData: state.post.post,\n      isLogged: state.loginUI.isLogged\n    };\n  }),\n      postData = _useSelector.postData,\n      isLogged = _useSelector.isLogged;\n\n  var router = useRouter();\n  var reqDeletePost = useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch(deletePostAsync.request(postData.data.resId));\n            _context.next = 7;\n            break;\n\n          case 4:\n            _context.prev = 4;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 4]]);\n  })), [dispatch]);\n  console.log(postData.data);\n  return __jsx(React.Fragment, null, __jsx(PostView, {\n    isLogged: isLogged,\n    reqDeletePost: reqDeletePost,\n    postData: postData,\n    editMode: editMode,\n    setEditMode: setEditMode\n  }), __jsx(Footer, null));\n};\n\nexport default BlogPostContainer;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/BlogPost/BlogPostContainer.tsx"],"names":["useDispatch","useSelector","useCallback","useRouter","PostView","deletePostAsync","Footer","BlogPostContainer","editMode","setEditMode","dispatch","state","postData","post","isLogged","loginUI","router","reqDeletePost","request","data","resId","console","log"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAAsD,OAAtD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA8C;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AACtE,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AADsE,qBAEvCC,WAAW,CAAC,UAAEU,KAAF;AAAA,WAA0B;AACnEC,MAAAA,QAAQ,EAAED,KAAK,CAACE,IAAN,CAAWA,IAD8C;AAEnEC,MAAAA,QAAQ,EAAEH,KAAK,CAACI,OAAN,CAAcD;AAF2C,KAA1B;AAAA,GAAD,CAF4B;AAAA,MAE9DF,QAF8D,gBAE9DA,QAF8D;AAAA,MAEpDE,QAFoD,gBAEpDA,QAFoD;;AAMtE,MAAME,MAAM,GAAGb,SAAS,EAAxB;AAEA,MAAMc,aAAa,GAAGf,WAAW;AAAA;AAAA;AAAA;AAAA,2BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE9BQ,YAAAA,QAAQ,CAACL,eAAe,CAACa,OAAhB,CAAwBN,QAAQ,CAACO,IAAT,CAAcC,KAAtC,CAAD,CAAR;AAF8B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAM9B,CAACV,QAAD,CAN8B,CAAjC;AAQAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACO,IAArB;AACA,SACE,4BACE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEL,QADZ;AAEE,IAAA,aAAa,EAAEG,aAFjB;AAGE,IAAA,QAAQ,EAAEL,QAHZ;AAIE,IAAA,QAAQ,EAAEJ,QAJZ;AAKE,IAAA,WAAW,EAAEC;AALf,IADF,EAQE,MAAC,MAAD,OARF,CADF;AAYD,CA7BD;;AA+BA,eAAeF,iBAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { useCallback, Dispatch, SetStateAction } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport PostView from '../../components/Posts/PostView/PostView';\r\nimport { deletePostAsync } from '../../store/modules/post';\r\nimport Footer from '../../components/CommonUI/Footer';\r\nimport HeaderContainer from '../Header/HeaderContainer';\r\nimport { RootState } from '../../store/modules';\r\n\r\ntype BlogPostProps = {\r\n  editMode: boolean;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>; \r\n};\r\nconst BlogPostContainer = ({ editMode, setEditMode }: BlogPostProps) => {\r\n  const dispatch = useDispatch();\r\n  const { postData, isLogged } = useSelector(( state : RootState ) => ({\r\n    postData: state.post.post,\r\n    isLogged: state.loginUI.isLogged\r\n  }))\r\n  const router = useRouter();\r\n\r\n  const reqDeletePost = useCallback(async () => {\r\n    try {\r\n      dispatch(deletePostAsync.request(postData.data.resId));\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }, [dispatch]);\r\n\r\n  console.log(postData.data);\r\n  return (\r\n    <>\r\n      <PostView \r\n        isLogged={isLogged} \r\n        reqDeletePost={reqDeletePost} \r\n        postData={postData} \r\n        editMode={editMode} \r\n        setEditMode={setEditMode} \r\n      />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogPostContainer;"]},"metadata":{},"sourceType":"module"}