{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport AWS from 'aws-sdk';\nimport { AWSConfig } from '../../config/awsconfig';\nvar albumBucketName = AWSConfig.albumBucketName,\n    bucketRegion = AWSConfig.bucketRegion,\n    IdentityPoolId = AWSConfig.IdentityPoolId;\nvar paramKey = 'blog-oscar/images/';\nAWS.config.region = bucketRegion; // 리전\n\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n  IdentityPoolId: IdentityPoolId\n});\nAWS.config.update({\n  region: bucketRegion,\n  credentials: new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: IdentityPoolId\n  })\n});\nexport var addPhoto =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(e) {\n    var file, upload, result, url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            file = e.target.files[0];\n            upload = new AWS.S3.ManagedUpload({\n              params: {\n                Bucket: albumBucketName,\n                Key: \"\".concat(paramKey).concat(file.name),\n                Body: file,\n                ACL: 'public-read'\n              }\n            });\n            result = upload.promise();\n            url = result.then(function (data) {\n              alert('사진이 등록되었습니다.');\n              return data.Location;\n            }, function (err) {\n              alert(\"\".concat(err.message));\n            });\n            return _context.abrupt(\"return\", url);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addPhoto(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}