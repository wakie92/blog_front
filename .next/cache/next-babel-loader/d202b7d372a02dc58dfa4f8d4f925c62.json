{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  html {\\n    font-size:62.5%;\\n    background-color: #fff;\\n  }\\n  body {\\n    margin: 0;\\n    padding: 0;\\n    font-size: 18px;\\n    font-weight: normal;\\n    line-height: 1.8;\\n    color: #343a40;\\n    font-family: 'Noto Sans KR';\\n    box-sizing: border-box;\\n  }\\n  * {\\n    margin: 0;\\n    padding: 0;\\n    outline: 0;\\n    border: 0;\\n    vertical-align: top;\\n  }\\n  article, footer, header, aside, details, header, nav, section {\\n    display: block;\\n  }\\n\\n  img {\\n    max-width: 100%;\\n  }\\n  a {\\n    text-decoration: none;\\n    color: #343a40;\\n  }\\n  h1 {\\n    font-weight: 700;\\n  }\\n  button {\\n    cursor: pointer;\\n  }\\n  p {\\n    margin: 0;\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport Layout from '../components/CommonUI/Layout';\nimport configureStore from '../store/configureStore';\nimport { getIsLogged } from '../store/modules/loginUI'; // composeWithDevTools()\n// const configureStore = () => {\n//   const sagaMiddleware = createSagaMiddleware();\n//   const middleware = [composeWithDevTools(), sagaMiddleware]\n//   const store = createStore(rootReducer,  applyMiddleware(sagaMiddleware) );\n//   // if (req || !isServer) {\n//     sagaMiddleware.run(rootSaga)\n//   // }\n//   return store;\n// };\n\nvar MyApp2 = function MyApp2(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      store = props.store;\n  return __jsx(ThemeProvider, {\n    theme: {\n      fontFamily: 'Noto Sans KR'\n    }\n  }, __jsx(Provider, {\n    store: store\n  }, __jsx(Layout, null, __jsx(Component, pageProps))), __jsx(React.Fragment, null, __jsx(GlobalStyle, null)));\n};\n\nMyApp2.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var Component, ctx, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref.Component, ctx = _ref.ctx;\n            pageProps = {}; // 서버사이드에서 리덕스 연결 성공. 원인 공부\n\n            if (!ctx.isServer) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(ctx);\n\n          case 5:\n            pageProps = _context.sent; //check login\n\n            if (!ctx.req.headers.cookie) {\n              console.log('none cookie');\n              ctx.store.dispatch(getIsLogged(false));\n            } else {\n              ctx.store.dispatch(getIsLogged(true));\n            }\n\n          case 7:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withRedux(configureStore)(withReduxSaga(MyApp2));\nvar GlobalStyle = createGlobalStyle(_templateObject());","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/_app.tsx"],"names":["MyApp2","Component","pageProps","store","props","fontFamily","ctx","console","getIsLogged","withRedux","withReduxSaga","GlobalStyle","createGlobalStyle"],"mappings":"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","sourcesContent":["import {  AppContext, AppInitialProps } from 'next/app';\r\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport { Provider } from 'react-redux';\r\nimport { Store } from 'redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport Layout from '../components/CommonUI/Layout';\r\nimport configureStore from '../store/configureStore';\r\nimport { getIsLogged } from '../store/modules/loginUI';\r\n\r\ntype IProps = { store: Store } & AppInitialProps & AppContext\r\n\r\n// composeWithDevTools()\r\n// const configureStore = () => {\r\n//   const sagaMiddleware = createSagaMiddleware();\r\n//   const middleware = [composeWithDevTools(), sagaMiddleware]\r\n//   const store = createStore(rootReducer,  applyMiddleware(sagaMiddleware) );\r\n//   // if (req || !isServer) {\r\n//     sagaMiddleware.run(rootSaga)\r\n//   // }\r\n//   return store;\r\n// };\r\nconst MyApp2 = (props: IProps) => {\r\n  const { Component, pageProps, store } = props;\r\n\r\n  return (\r\n    <ThemeProvider theme={{ fontFamily: 'Noto Sans KR' }}>\r\n      <Provider store={store}>\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n      <>\r\n        <GlobalStyle />\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nMyApp2.getInitialProps = async ({ Component, ctx }) => {\r\n  let pageProps = {}\r\n  // 서버사이드에서 리덕스 연결 성공. 원인 공부\r\n  if (ctx.isServer) {\r\n    pageProps = await Component.getInitialProps(ctx)\r\n\r\n    //check login\r\n    if(!ctx.req.headers.cookie) {\r\n      console.log('none cookie')\r\n      ctx.store.dispatch(getIsLogged(false))\r\n    } else {\r\n      ctx.store.dispatch(getIsLogged(true))\r\n    }\r\n  }\r\n  return { pageProps }\r\n}\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(MyApp2));\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size:62.5%;\r\n    background-color: #fff;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    line-height: 1.8;\r\n    color: #343a40;\r\n    font-family: 'Noto Sans KR';\r\n    box-sizing: border-box;\r\n  }\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    border: 0;\r\n    vertical-align: top;\r\n  }\r\n  article, footer, header, aside, details, header, nav, section {\r\n    display: block;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #343a40;\r\n  }\r\n  h1 {\r\n    font-weight: 700;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }`;\r\n"]},"metadata":{},"sourceType":"module"}