{"version":3,"file":"static\\development\\pages\\_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/CommonUI/Layout.tsx","webpack:///./config/init-firebase.ts","webpack:///./lib/Utils/asyncUtils.ts","webpack:///./lib/Utils/createAsyncSaga.ts","webpack:///./lib/api/apis.ts","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/_app.tsx","webpack:///./store/configureStore.js","webpack:///./store/modules/index.ts","webpack:///./store/modules/loginUI/actions.ts","webpack:///./store/modules/loginUI/index.ts","webpack:///./store/modules/loginUI/reducers.ts","webpack:///./store/modules/post/actions.ts","webpack:///./store/modules/post/index.ts","webpack:///./store/modules/post/reducers.ts","webpack:///./store/modules/post/saga.ts","webpack:///./store/modules/postUI.ts","webpack:///external \"@emotion/core\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"firebase/app\"","webpack:///external \"firebase/auth\"","webpack:///external \"firebase/firestore\"","webpack:///external \"next-redux-saga\"","webpack:///external \"next-redux-wrapper\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"redux-saga\"","webpack:///external \"redux-saga/effects\"","webpack:///external \"styled-components\"","webpack:///external \"typesafe-actions\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div\r\n      css={css`\r\n      width: 100%;\r\n      /* padding: 0 3%; */\r\n      // padding-bottom: 100px;\r\n      margin: 0 auto;\r\n    `}\r\n    className=\"page-layout\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Layout;","import * as firebase from  'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBLXvVQTnFPYwECmKot63Ww0nTElbPDyfQ\",\r\n  authDomain: \"myblog-672d0.firebaseapp.com\",\r\n  databaseURL: \"https://myblog-672d0.firebaseio.com\",\r\n  projectId: \"myblog-672d0\",\r\n  storageBucket: \"myblog-672d0.appspot.com\",\r\n  messagingSenderId: \"899979036711\",\r\n  appId: \"1:899979036711:web:cd2980d7e7741bc55a6602\",\r\n  measurementId: \"G-B068HWHPHP\"\r\n}\r\nexport function firebaseDB() {\r\n  // Initialize Firebase\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    // firebase.analytics();\r\n  }\r\n  return firebase;\r\n}\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();","import { AnyAction } from 'redux';\r\nimport { getType, AsyncActionCreatorBuilder } from 'typesafe-actions';\r\nexport type AsyncState<T, E = any> = {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: E | null;\r\n};\r\nexport const asyncState = {\r\n  initial: <T, E = any>(initialData?: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: initialData || null,\r\n    error: null,\r\n  }),\r\n  loading: <T, E = any>(data?: T): AsyncState<T, E> => ({\r\n    loading: true,\r\n    data: data || null,\r\n    error: null\r\n  }),\r\n  success: <T, E = any>(data: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data,\r\n    error: null\r\n  }),\r\n  error: <T, E>(error: E): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n  })\r\n};\r\n\r\ntype AnyAsyncActionCreator = AsyncActionCreatorBuilder<any, any, any>;\r\nexport function transformToArray<AC extends AnyAsyncActionCreator>(\r\n  asyncActionCreator: AC,\r\n) {\r\n  const { request, success, failure } = asyncActionCreator;\r\n  return [request, success, failure];\r\n}\r\n\r\nexport const handleAsyncActions = <S, AC extends AnyAsyncActionCreator, K extends keyof S>(\r\n  type: AC,\r\n  key: K\r\n  ) => {\r\n  return (state: S, action: AnyAction) => {\r\n    const [request, success, failure] = transformToArray(type).map(getType);\r\n    switch (action.type) {\r\n      case request:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.loading(),\r\n        };\r\n      case success:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.success(action.payload),\r\n        };\r\n      case failure:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.error(action.payload),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { AsyncActionCreatorBuilder, PayloadAction } from 'typesafe-actions';\r\n\r\ntype PromiseCreatorFunction<P, T> = ((payload: P) => Promise<T>) | (() => Promise<T>);\r\n\r\nfunction isPayloadAction<P>(action: any): action is PayloadAction<string, P> {\r\n\treturn action.payload !== undefined;\r\n}\r\n\r\nexport default function createAsyncSaga<T1, P1, T2, P2, T3, P3>(\r\n\tasyncActionCreator: AsyncActionCreatorBuilder<[T1, [P1, undefined]], [T2, [P2, undefined]], [T3, [P3, undefined]]>,\r\n\tpromiseCreator: PromiseCreatorFunction<P1, P2>\r\n) {\r\n\treturn function* saga(action: ReturnType<typeof asyncActionCreator.request>) {\r\n\t\ttry {\r\n\t\t\tconst result = isPayloadAction<P1>(action)\r\n\t\t\t? yield call(promiseCreator, action.payload)\r\n\t\t\t: yield call(promiseCreator);\r\n\t\t\tyield put(asyncActionCreator.success(result));\r\n\t\t} catch (e) {\r\n\t\t\tyield put(asyncActionCreator.failure(e));\r\n\t\t}\r\n\t};\r\n}\r\n","import { Post, PutPostType } from './../../store/modules/post/types';\r\nimport { firebaseDB } from '../../config/init-firebase';\r\n\r\nconst db = firebaseDB().firestore();\r\nconst blogDB = db.collection(\"blogDB\");\r\n\r\nexport const GetPostsList = async <T>(cnt: number): Promise<T[]> => {\r\n\t// const user = firebase.auth().currentUser\r\n\tconst query = blogDB.orderBy(\"date\", \"desc\").limit(cnt);\r\n\tconst response: T[] = await query.get().then((querySnapshot) => {\r\n\t\t\treturn querySnapshot.docs.map((data) => {\r\n\t\t\t\tconst ele: T = { ...data.data(), id: data.id } as unknown as T;\r\n\t\t\t\treturn ele;\r\n\t\t\t});\r\n\t\t}).catch((e) =>  console.log(e)) as T[];\r\n\treturn response;\r\n};\r\n\r\nexport const PutPost = async ({post, id}: PutPostType) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.set(post).then((res) => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t});\r\n\treturn response.data;\r\n};\r\n\r\nexport const PostUpdate = async (data: Post) => {\r\n\tconst response: string = await blogDB.add(data)\r\n\t\t.then((res) => {\r\n\t\t\treturn res.id;\r\n\t\t}).catch((err) => {\r\n\t\t\treturn err;\r\n\t\t});\r\n\treturn response;\r\n};\r\n\r\nexport const GetPost = async (index: string) => {\r\n\tconst query = blogDB.doc(index);\r\n\tconst response = await query.get().then((doc) => {\r\n\t\treturn { \r\n\t\t\tres: { ...doc.data(), id: doc.id } as unknown as Post, \r\n\t\t\tresId: doc.id \r\n\t\t};\r\n\t});\r\n\treturn response;\t\r\n};\r\n\r\nexport const DeletePost = async (id: string) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.delete().then(() => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t})\r\n\treturn response;\r\n};\r\n\r\nexport type LoginType = {\r\n\tmessage: string;\r\n};\r\n","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import {  AppContext, AppInitialProps } from 'next/app';\r\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport { Provider } from 'react-redux';\r\nimport { Store } from 'redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport Layout from '../components/CommonUI/Layout';\r\nimport configureStore from '../store/configureStore';\r\nimport { getIsLogged } from '../store/modules/loginUI';\r\n\r\ntype IProps = { store: Store } & AppInitialProps & AppContext\r\n\r\n// composeWithDevTools()\r\n// const configureStore = () => {\r\n//   const sagaMiddleware = createSagaMiddleware();\r\n//   const middleware = [composeWithDevTools(), sagaMiddleware]\r\n//   const store = createStore(rootReducer,  applyMiddleware(sagaMiddleware) );\r\n//   // if (req || !isServer) {\r\n//     sagaMiddleware.run(rootSaga)\r\n//   // }\r\n//   return store;\r\n// };\r\nconst MyApp2 = (props: IProps) => {\r\n  const { Component, pageProps, store } = props;\r\n\r\n  return (\r\n    <ThemeProvider theme={{ fontFamily: 'Noto Sans KR' }}>\r\n      <Provider store={store}>\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n      <>\r\n        <GlobalStyle />\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nMyApp2.getInitialProps = async ({ Component, ctx }) => {\r\n  let pageProps = {}\r\n  // 서버사이드에서 리덕스 연결 성공. 원인 공부\r\n  if (ctx.isServer) {\r\n    pageProps = await Component.getInitialProps(ctx)\r\n\r\n    //check login\r\n    if(!ctx.req.headers.cookie) {\r\n      console.log('none cookie')\r\n      ctx.store.dispatch(getIsLogged(false))\r\n    } else {\r\n      ctx.store.dispatch(getIsLogged(true))\r\n    }\r\n  }\r\n  return { pageProps }\r\n}\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(MyApp2));\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size:62.5%;\r\n    background-color: #fff;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    line-height: 1.8;\r\n    color: #343a40;\r\n    font-family: 'Noto Sans KR';\r\n    box-sizing: border-box;\r\n  }\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    border: 0;\r\n    vertical-align: top;\r\n  }\r\n  article, footer, header, aside, details, header, nav, section {\r\n    display: block;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #343a40;\r\n  }\r\n  h1 {\r\n    font-weight: 700;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }`;\r\n","import {createStore, applyMiddleware, Store} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootReducer, { rootSaga } from './modules'\r\n \r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension')\r\n    return composeWithDevTools(applyMiddleware(...middleware))\r\n  }\r\n  return applyMiddleware(...middleware)\r\n}\r\n\r\nfunction configureStore(preloadedState, {isServer, req = null}) {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    bindMiddleware([sagaMiddleware])\r\n  )\r\n  if (req || !isServer) {\r\n    store.sagaTask = sagaMiddleware.run(rootSaga)\r\n  }\r\n  return store\r\n}\r\n \r\nexport default configureStore","import { all } from 'redux-saga/effects';\r\nimport { combineReducers } from 'redux';\r\nimport postUI  from './postUI';\r\nimport { postSaga, updateSaga, getOnePostSaga, putSaga, deleteSaga } from './post';\r\nimport post from './post/reducers';\r\nimport loginUI from './loginUI';\r\n\r\nconst rootReducer = combineReducers({\r\n  postUI,\r\n  post,\r\n  loginUI,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport function* rootSaga() {\r\n  yield all([postSaga(), updateSaga(), getOnePostSaga(), putSaga(), deleteSaga()]);\r\n}","import { createAction } from 'typesafe-actions';\r\nimport { updateKey } from './types';\r\n\r\n\r\nexport const GET_AUTH = 'loginUI/GET_AUTH';\r\nexport const GET_LOGIN_MODAL = 'loginUI/GET_LOGIN_MODAL';\r\nexport const INITIALIZE = 'loginUI/INITIALIZE';\r\n\r\nexport const IS_LOGGED = 'loginUI/IS_LOGGED';\r\n\r\nexport const getAuth = createAction(GET_AUTH, ({ name, value }: updateKey) => ({\r\n  name,\r\n  value,\r\n}))<updateKey>();\r\n\r\nexport const getLoginModal = createAction(GET_LOGIN_MODAL)();\r\nexport const initialize = createAction(INITIALIZE)();\r\nexport const getIsLogged = createAction(IS_LOGGED, (isLogged: boolean) => (isLogged))<boolean>();","export { default } from './reducers';\r\nexport * from './actions';\r\nexport * from './types';","import { createReducer } from 'typesafe-actions';\r\nimport { LoginUIState, LoginUIActions } from './types';\r\nimport { GET_LOGIN_MODAL, GET_AUTH, INITIALIZE, IS_LOGGED } from './actions';\r\n\r\nconst initialState: LoginUIState = {\r\n  isLoginModal: false,\r\n  email: '',\r\n  password: '',\r\n  isLogged: false,\r\n};\r\n\r\nconst loginUI = createReducer<LoginUIState, LoginUIActions>(initialState, {\r\n  [IS_LOGGED]: (state, action) => {\r\n    return ({\r\n      ...state,\r\n      isLogged: action.payload,\r\n    })\r\n  },\r\n  [GET_LOGIN_MODAL]: state => {\r\n    return ({\r\n    ...state,\r\n    isLoginModal: !state.isLoginModal,\r\n  })},\r\n  [GET_AUTH]: (state, action) => {\r\n    const { name, value } = action.payload;\r\n    return ({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  },\r\n  [INITIALIZE]: state => {\r\n    return ({\r\n      ...state,\r\n      email: '',\r\n      password: '',\r\n    })\r\n  },\r\n});\r\n\r\nexport default loginUI;","import { createAsyncAction } from 'typesafe-actions';\r\nimport { AxiosError } from 'axios';\r\nimport { Post, PutPostType } from './types';\r\n\r\nexport const DELETE_POST = 'post/DELETE_POST';\r\nexport const DELETE_POST_SUCCESS = 'post/DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_ERROR = 'post/DELETE_POST_ERROR';\r\n\r\nexport const EDIT_POST = 'post/EDIT_POST';\r\nexport const EDIT_POST_SUCCESS = 'post/EDIT_POST_SUCCESS';\r\nexport const EDIT_POST_ERROR = 'post/EDIT_POST_ERROR';\r\n\r\nexport const UPDATE_POST = 'post/UPDATE_POST';\r\nexport const UPDATE_POST_SUCCESS = 'post/UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_ERROR = 'post/UPDATE_POST_ERROR';\r\n\r\nexport const GET_POSTS_LIST = 'post/GET_POSTS_LIST';\r\nexport const GET_POSTS_LIST_SUCCESS = 'post/GET_POSTS_LIST_SUCCESS';\r\nexport const GET_POSTS_LIST_ERROR = 'post/GET_POSTS_LIST_ERROR';\r\n\r\nexport const GET_POST = 'post/GET_POST';\r\nexport const GET_POST_SUCCESS = 'post/GET_POST_SUCCESS';\r\nexport const GET_POST_ERROR = 'post/GET_POST_ERROR';\r\n\r\nexport const deletePostAsync = createAsyncAction(\r\n  DELETE_POST,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_ERROR,\r\n)<string, any, AxiosError>();\r\n\r\nexport const getPostsListAsync = createAsyncAction(\r\n  GET_POSTS_LIST,\r\n  GET_POSTS_LIST_SUCCESS,\r\n  GET_POSTS_LIST_ERROR,\r\n)<number, Post[], AxiosError>();\r\n\r\nexport const postAsync = createAsyncAction(\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_ERROR,\r\n)<Post, string, AxiosError<string>>();\r\n\r\nexport const putPostAsync = createAsyncAction(\r\n  EDIT_POST,\r\n  EDIT_POST_SUCCESS,\r\n  EDIT_POST_ERROR,\r\n)<PutPostType, string, AxiosError<string>>();\r\n\r\nexport const getPostAsync = createAsyncAction(\r\n  GET_POST,\r\n  GET_POST_SUCCESS,\r\n  GET_POST_ERROR,\r\n)<string, {res: Post, resId: string}, AxiosError<string>>();","export { default } from './reducers';\r\nexport * from './actions';\r\nexport * from './types';\r\nexport * from './saga';","import { asyncState, transformToArray, handleAsyncActions } from './../../../lib/Utils/asyncUtils';\r\nimport { PostState, PostActions, Post } from './types';\r\nimport { createReducer } from 'typesafe-actions';\r\nimport {\r\n\tgetPostsListAsync,\r\n\tpostAsync,\r\n\tGET_POSTS_LIST,\r\n\tGET_POSTS_LIST_SUCCESS,\r\n\tGET_POSTS_LIST_ERROR,\r\n\tUPDATE_POST,\r\n\tUPDATE_POST_SUCCESS,\r\n\tUPDATE_POST_ERROR,\r\n\tGET_POST,\r\n\tGET_POST_SUCCESS,\r\n\tGET_POST_ERROR\r\n} from './actions';\r\n\r\nconst initialState: PostState = {\r\n\tpostsList: asyncState.initial(),\r\n\treqPost: asyncState.initial(),\r\n\tpost: asyncState.initial(),\r\n};\r\nconst post = createReducer<PostState, PostActions>(initialState, {\r\n\t[GET_POSTS_LIST]: (state) => ({\r\n\t\t...state,\r\n\t\tpostsList: asyncState.loading()\r\n\t}),\r\n\t[GET_POSTS_LIST_SUCCESS]: (state, action) => {\r\n\t\treturn {\r\n\t\t...state,\r\n\t\tpostsList: asyncState.success(action.payload)\r\n\t}},\r\n\t[GET_POSTS_LIST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpostsList: asyncState.error(action.payload)\r\n\t}),\r\n\t[UPDATE_POST]: (state) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.loading()\r\n\t}),\r\n\t[UPDATE_POST_SUCCESS]: (state, action) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.success(action.payload)\r\n\t}),\r\n\t[UPDATE_POST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.error(action.payload)\r\n\t}),\r\n\t[GET_POST]: (state) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.loading(),\r\n\t}),\r\n\t[GET_POST_SUCCESS]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.success(action.payload)\r\n\t}),\r\n\t[GET_POST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.error(action.payload)\r\n\t})\r\n});\r\n\r\n// refactoring code\r\nconst test = createReducer<PostState, PostActions>(initialState).handleAction(\r\n\ttransformToArray(getPostsListAsync),\r\n\thandleAsyncActions(getPostsListAsync, 'postsList')\r\n);\r\n\r\nexport default post;\r\n","import {\r\n\tgetPostsListAsync,\r\n\tGET_POSTS_LIST,\r\n\tEDIT_POST,\r\n\tputPostAsync,\r\n\tpostAsync,\r\n\tUPDATE_POST,\r\n\tgetPostAsync,\r\n\tGET_POST,\r\n  deletePostAsync,\r\n  DELETE_POST\r\n} from './actions';\r\nimport { GetPostsList, PostUpdate, GetPost, PutPost, DeletePost } from '../../../lib/api/apis';\r\nimport { takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport createAsyncSaga from '../../../lib/Utils/createAsyncSaga';\r\nimport { Post } from './types';\r\n\r\nconst deletePostSaga = createAsyncSaga(deletePostAsync, DeletePost);\r\nconst putPostSaga = createAsyncSaga(putPostAsync, PutPost);\r\nconst postUpdateSaga = createAsyncSaga(postAsync, PostUpdate);\r\nconst getPostsListSaga = createAsyncSaga(getPostsListAsync, GetPostsList);\r\nconst getPostSaga = createAsyncSaga(getPostAsync, GetPost);\r\n\r\nexport function* updateSaga() {\r\n\tyield takeLatest(UPDATE_POST, postUpdateSaga);\r\n}\r\nexport function* postSaga() {\r\n\tyield takeEvery(GET_POSTS_LIST, getPostsListSaga);\r\n}\r\nexport function* getOnePostSaga() {\r\n\tyield takeLatest(GET_POST, getPostSaga);\r\n}\r\nexport function* putSaga() {\r\n\tyield takeLatest(EDIT_POST, putPostSaga);\r\n}\r\nexport function* deleteSaga() {\r\n  yield takeLatest(DELETE_POST, deletePostSaga);\r\n}\r\n","import { createAction, ActionType, createReducer } from 'typesafe-actions';\r\nimport { updateKey } from './loginUI';\r\n\r\nconst SET_INPUT_VALUES = 'post/SET_INPUT_VALUES';\r\nconst INPUT_VALUE = 'post/INPUT_VALUE';\r\nconst RESET_INPUT_VALUE = 'post/RESET_INPUT_VALUE';\r\nconst ADD_TAG_ARR = 'post/ADD_TAG_ARR';\r\n\r\nexport const addTagArr = createAction(ADD_TAG_ARR)<null>();\r\nexport const getValue = createAction(INPUT_VALUE, ({ name, value }: updateKey) => ({\r\n\tname,\r\n\tvalue\r\n}))<updateKey>();\r\n\r\nexport const resetInputValue = createAction(RESET_INPUT_VALUE)<null>();\r\nexport const setInputValues = createAction(SET_INPUT_VALUES, \r\n\t({ title, inputValue, mdValue, imgUrl, subTitle, tagArr, tag }: PostWrite) => ({\r\n\ttitle,\r\n\tinputValue,\r\n\tmdValue,\r\n\timgUrl,\r\n\ttagArr,\r\n\tsubTitle,\r\n\ttag\r\n}))<PostWrite>();\r\n\r\nconst actions = {\r\n\tgetValue,\r\n\tresetInputValue,\r\n\tsetInputValues,\r\n\taddTagArr,\r\n};\r\n\r\nexport type PostActions = ActionType<typeof actions>;\r\n\r\nexport type PostWrite = {\r\n\ttitle: string;\r\n\tinputValue: string;\r\n\tmdValue: string;\r\n\timgUrl: null | string;\r\n\tsubTitle: string;\r\n\ttagArr: string[] ;\r\n\ttag: string;\r\n};\r\n\r\nexport type PostState = {\r\n\tpostWrite: PostWrite;\r\n};\r\n\r\nconst initialState: PostState = {\r\n\tpostWrite: {\r\n\t\ttitle: '',\r\n\t\tinputValue: '',\r\n\t\tmdValue: '',\r\n\t\tsubTitle:'',\r\n\t\timgUrl: null,\r\n\t\ttagArr: [],\r\n\t\ttag: '',\r\n\t}\r\n};\r\n\r\nconst post = createReducer<PostState, PostActions>(initialState, {\r\n\t[SET_INPUT_VALUES]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: action.payload\r\n\t\t};\r\n\t},\r\n\t[RESET_INPUT_VALUE]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: {\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tinputValue: '',\r\n\t\t\t\tmdValue: '',\r\n\t\t\t\tsubTitle:'',\r\n\t\t\t\timgUrl: null,\r\n\t\t\t\ttagArr: [],\r\n\t\t\t\ttag: ''\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\t[INPUT_VALUE]: (state, { payload: { name, value } }) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: {\r\n\t\t\t\t...state.postWrite,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\t[ADD_TAG_ARR]: (state, action) => {\r\n\t\tconst{ tagArr, tag } = state.postWrite\r\n\t\tconst addTagArr = tagArr.concat(tag.replace(',', ''));\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: {\r\n\t\t\t\t...state.postWrite,\r\n\t\t\t\ttagArr: addTagArr,\r\n\t\t\t\ttag: '',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default post;\r\n","module.exports = require(\"@emotion/core\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/auth\");","module.exports = require(\"firebase/firestore\");","module.exports = require(\"next-redux-saga\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-saga\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"styled-components\");","module.exports = require(\"typesafe-actions\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;;;;;;AACA;AACA;AAQA;AAPA;AAWA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAhBA;AAwBA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAjBA;AAmBA;AACA;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAIA;AACA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA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","sourceRoot":""}