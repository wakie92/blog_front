{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/CommonUI/Hamburger.tsx","webpack:///./components/CommonUI/Header.tsx","webpack:///./components/CommonUI/Tag.tsx","webpack:///./components/Maybe/Maybe.tsx","webpack:///./components/Posts/Post/LoadingPost.tsx","webpack:///./components/Posts/Post/Post.tsx","webpack:///./components/Posts/Post/Tags.tsx","webpack:///./components/Posts/PostList/PostList.tsx","webpack:///./components/Posts/PostsLayout.tsx","webpack:///./components/Posts/index.ts","webpack:///./config/init-firebase.ts","webpack:///./containers/Header/HeaderContainer.tsx","webpack:///./containers/Post/PostContainer.tsx","webpack:///./containers/Post/PostListContainer.tsx","webpack:///./lib/Routes/Routes.ts","webpack:///./lib/Utils/asyncUtils.ts","webpack:///./lib/Utils/createAsyncSaga.ts","webpack:///./lib/Utils/utils.ts","webpack:///./lib/api/apis.ts","webpack:///./lib/styles/global.tsx","webpack:///./lib/styles/responsive.ts","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/index.tsx","webpack:///./routes.js","webpack:///./store/modules/post/actions.ts","webpack:///./store/modules/post/index.ts","webpack:///./store/modules/post/reducers.ts","webpack:///./store/modules/post/saga.ts","webpack:///external \"@emotion/core\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"firebase/app\"","webpack:///external \"firebase/auth\"","webpack:///external \"firebase/firestore\"","webpack:///external \"next-routes\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux-saga/effects\"","webpack:///external \"styled-components\"","webpack:///external \"typesafe-actions\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import styled, { css } from 'styled-components';\r\nimport { breakpoints } from '../../lib/styles/responsive';\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ninterface HamburgerProps {\r\n  toggle: boolean;\r\n  onToggle: () => void;\r\n}\r\nconst Hamburger = ({ toggle, onToggle }: HamburgerProps) => {\r\n  return (\r\n    <BurgerIcon\r\n      colors={colors}\r\n      breakpoints={breakpoints}\r\n      toggle={toggle}\r\n      onClick={onToggle}\r\n    >\r\n      <div className=\"burger-line\" />\r\n      <div className=\"burger-line\" />\r\n      <div className=\"burger-line\" />\r\n    </BurgerIcon>\r\n  );\r\n}\r\nexport default Hamburger;\r\nconst BurgerIcon = styled.button<{\r\n  colors: object;\r\n  breakpoints: object;\r\n  toggle: boolean;\r\n}>`\r\n  position: fixed;\r\n  top: 2rem;\r\n  right: 5rem;\r\n  width: 5rem;\r\n  height: 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${colors.defaultBlack};\r\n  opacity: 0.8;\r\n  z-index: 900;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.violet9};\r\n  }\r\n  transition: all 500ms;\r\n  transform: ${props =>\r\n    props.toggle ? 'translateX(-35rem) rotate(180deg)' : 'translateX(0rem)'};\r\n  background-color: ${props => props.toggle && colors.violet9};\r\n  .burger-line {\r\n    ${props => !props.toggle\r\n      ? css`\r\n      width: 3rem;\r\n      height: 0.4rem;\r\n      margin: 0.2rem 0;\r\n      `\r\n      : css`\r\n      width: 3rem;\r\n      height: 0.15rem;\r\n      margin: 0;\r\n      `\r\n    };\r\n    transition: ease-in 500ms;\r\n    background-color: white;\r\n  }\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    transform: unset;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { colors } from '../../lib/styles/global';\r\nimport Hamburger from './Hamburger';\r\nimport { breakpoints } from '../../lib/styles/responsive';\r\nimport Maybe from '../Maybe/Maybe';\r\nimport router  from '../../routes';\r\n\r\ntype HeaderProps = {\r\n  handleToggle: () => void;\r\n  toggle: boolean;\r\n  isLogged: boolean;\r\n}\r\nconst Header = ({ handleToggle, toggle, isLogged }: HeaderProps) => {\r\n  const { Link } = router;\r\n  return (\r\n    <>\r\n      <Wrapper aColor={colors.violet9} breakpoints={breakpoints}>\r\n        <div className=\"nav-box\">\r\n          <a href={ROUTES.home} className=\"blog-name\">\r\n            건망증 개발자 기록지\r\n          </a>\r\n          <SmallNav toggle={toggle}>\r\n            <a href={ROUTES.about}>\r\n              <span>About</span>\r\n            </a>\r\n          </SmallNav>\r\n          <Hamburger toggle={toggle} onToggle={handleToggle} />\r\n          <div className=\"nav\">\r\n            <Maybe isVisible={isLogged}>\r\n              <>\r\n                <a href={ROUTES.write}>write</a>\r\n              </>\r\n            </Maybe>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nconst Wrapper = styled.header<{ aColor: string; breakpoints: object }>`\r\n  width: calc(100% - 10rem);\r\n  height: 6rem;\r\n  padding-top: 10rem;\r\n  margin: auto;\r\n  border-bottom: 1px solid #ced4da;\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (max-width: ${breakpoints.medium}) {\r\n    width: 100%;\r\n  }\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    padding-top: 2rem;\r\n  }\r\n  .nav-box {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    @media screen and (max-width: ${breakpoints.medium}) {\r\n      width: 100%;\r\n      padding: 0 2rem;\r\n    }\r\n    .blog-name {\r\n      font-size: 2rem;\r\n      font-weight: 900;\r\n    }\r\n    .nav {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      a {\r\n        font-size: 2rem;\r\n        cursor: pointer;\r\n        color: ${props => props.aColor};\r\n        & + a {\r\n          margin-left: 1rem;\r\n        }\r\n      }\r\n      @media screen and (max-width: ${breakpoints.small}) {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavRouter = styled.div`\r\n\r\n`;\r\nconst SmallNav = styled.aside<{ toggle: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  visibility: ${props => (props.toggle ? 'visible' : 'hidden')};\r\n  position: fixed;\r\n  background-color: black;\r\n  opacity: 0.8;\r\n  width: 30rem;\r\n  height: 100%;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 888;\r\n  transition: all 500ms;\r\n  transform: ${props =>\r\n    props.toggle ? 'translateX(0rem)' : 'translateX(35rem)'};\r\n  padding-top: 20rem;\r\n  padding-left: 5rem;\r\n  a {\r\n    color: white !important;\r\n    width: 80%;\r\n    .bolg-category {\r\n      font-size: 2rem;\r\n      padding-left: 3rem;\r\n    }\r\n  }\r\n  font-size: 3rem;\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    transform: ${props => (props.toggle ? 'translateX()' : 'translateX(100%)')};\r\n    width: calc(100% - 5rem);\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import styled from 'styled-components'\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ntype TagProps = {\r\n  tagString: string;\r\n}\r\nconst Tag = ({ tagString }: TagProps ) => (\r\n  <TagDiv>\r\n    <span>{tagString}</span>\r\n  </TagDiv>\r\n)\r\n\r\nconst TagDiv = styled.div`\r\n  border-radius: 1.6rem;\r\n  background-color: ${colors.gray4};\r\n  font-weight: 600;\r\n  margin: 0.5rem;\r\n  font-size: 1.4rem;\r\n  padding: 0.4rem 1rem;\r\n  line-height: 1.3;\r\n  height: 2rem;\r\n`\r\nexport default Tag;","import { ReactChildren, ReactFragment } from \"react\";\r\n\r\ntype MaybeProps = {\r\n  isVisible: any,\r\n  children: ReactChildren | JSX.Element | ReactFragment,\r\n}\r\nconst Maybe = ({ isVisible, children }: MaybeProps) => {\r\n  return <>\r\n  {isVisible && children}\r\n  </>\r\n};\r\nexport default Maybe;","/**@jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport { colors } from '../../../lib/styles/global';\r\n\r\nexport type LoadingPostProps = {};\r\nexport default function LoadingPost({}: LoadingPostProps) {\r\n  const loadingPostArr:JSX.Element[] = new Array(30);\r\n  const ele: JSX.Element = (\r\n    <WrpperProps gray1={colors.gray2}>\r\n        <div className=\"image-container\">\r\n          <div className=\"thumb-nail\" />\r\n        </div>\r\n        <div className=\"li-article\">\r\n          <div className=\"post-info\">\r\n            <h3 className=\"title\" style={{ width: '100%'}} />\r\n            <h3 className=\"title\" style={{ width: '30%'}}/>\r\n            <div className=\"date-comment\">\r\n              <span className=\"date\"></span>\r\n              <div className=\"commetns\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"pre-content\">\r\n            <div style={{ width: '100%' }} />\r\n            <div style={{ width: '100%' }} />\r\n            <div style={{ width: '80%' }} />\r\n          </div>\r\n        </div>\r\n      </WrpperProps>\r\n  );\r\n  for(let i = 0; i < 30; i+=1 ) {\r\n    loadingPostArr.push(ele);\r\n  }\r\n  return <>\r\n    {loadingPostArr}\r\n  </>\r\n}\r\n\r\nconst WrpperProps = props => (\r\n  <li\r\n    css={css`\r\n      border-radius: 4px;\r\n      box-shadow: 0px 4px 8px 8px rgba(0, 0, 0, 0.05);\r\n      .li-article {\r\n        padding: 1rem 1.5rem;\r\n        margin: 1rem 0;\r\n        height: 18rem;\r\n        .post-info {\r\n          height: 12rem;\r\n          border-bottom: 1px solid ${props.gray1};\r\n          margin-bottom: 1rem;\r\n          .title {\r\n            background-color: ${props.gray1};\r\n            height: 2.5rem;\r\n            border-radius: 5px;\r\n            margin-bottom: 0.5rem;\r\n          }\r\n          .date-comment {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            .date {\r\n              background-color: ${props.gray1};\r\n              width: 60%;\r\n              height: 1.5rem;\r\n              border-radius: 5px;\r\n              margin-bottom: 2rem;\r\n              margin-top: 1.5rem;\r\n            }\r\n          }\r\n        }\r\n        .pre-content {\r\n          div {\r\n            height: 1.5rem;\r\n            background-color: ${props.gray1};\r\n            margin-bottom: 0.5rem;\r\n            border-radius: 5px;\r\n          }\r\n        }\r\n      }\r\n      .image-container {\r\n        overflow: hidden;\r\n        border-radius: 4px 4px 0 0;\r\n        height: 18rem;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .thumb-nail {\r\n          border-radius: 4px;\r\n          width: calc(100% - 1rem);\r\n          height: calc(100% - 1rem);\r\n          background-color: ${props.gray1};\r\n        }\r\n      }\r\n    `}\r\n  >\r\n    {props.children}\r\n  </li>\r\n);\r\n","/**@jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { colors } from '../../../lib/styles/global';\r\nimport { formatDate } from '../../../lib/Utils/utils';\r\nimport Maybe from '../../Maybe/Maybe';\r\nimport Tags from './Tags';\r\nimport { breakpoints } from '../../../lib/styles/responsive';\r\n\r\nexport type PostProps = {\r\n\ttitle: string;\r\n\tpreContent: string;\r\n\tdate: string;\r\n\tonClick?: () => void;\r\n\timgUrl?: string;\r\n\ttagArr: string[];\r\n};\r\nexport default function Post({ title, preContent, date, onClick, imgUrl, tagArr }: PostProps) {\r\n\treturn (\r\n\t\t<WrpperProps onClick={onClick} imgUrl={imgUrl} dateColor={colors.gray4}>\r\n\t\t\t<div className=\"image-container\">\r\n\t\t\t\t<img alt=\"\" className=\"thumb-nail\" src={imgUrl}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"li-article\">\r\n\t\t\t\t<div className=\"post-info\">\r\n\t\t\t\t\t<h3 className=\"title\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<Maybe isVisible={tagArr}>\r\n\t\t\t\t\t\t<Tags tagArr={tagArr} />\r\n\t\t\t\t\t</Maybe>\r\n\t\t\t\t\t<span className=\"date\">{formatDate(date)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"pre-content\">{preContent}</div>\r\n\t\t\t</div>\r\n\t\t</WrpperProps>\r\n\t);\r\n}\r\n\r\nconst WrpperProps = (props) => (\r\n\t<li\r\n\t\tonClick={props.onClick}\r\n\t\tcss={css`\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tbox-shadow: 0px 4px 8px 8px rgba(0, 0, 0, 0.05);\r\n\t\t\tcursor: pointer;\r\n\t\t\t.li-article {\r\n\t\t\t\tpadding: 1rem 1.5rem;\r\n\t\t\t\theight: ${props.imgUrl ? '29rem' : '47rem'};\r\n\t\t\t\tpadding-top: 2rem;\r\n\t\t\t\t.post-info {\r\n\t\t\t\t\t// min-height: ${props.imgUrl ? '12rem' : '13rem'};\r\n\t\t\t\t\tmin-height: 12rem;\r\n\t\t\t\t\tborder-bottom: 1px solid ${props.dateColor};\r\n\t\t\t\t\t.title {\r\n\t\t\t\t\t\tmax-height: 11.5rem;\r\n\t\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\t\tword-break: break-all;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.tags {\r\n\t\t\t\t\t\tborder-radius: 1.6rem;\r\n\t\t\t\t\t\tbackground-color: #ccc;\r\n\t\t\t\t\t\tmargin: 0.5rem;\r\n\t\t\t\t\t\tpadding: 0.5rem;\r\n\t\t\t\t\t\tline-height: 1.5;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.date {\r\n\t\t\t\t\t\tcolor: ${props.dateColor};\r\n\t\t\t\t\t\tfont-size: 1.5rem;\r\n\t\t\t\t\t\tmargin-bottom: 2rem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t.pre-content {\r\n\t\t\t\t\tmargin-top: 1.5rem;\r\n\t\t\t\t\tcolor: #868e96;\r\n\t\t\t\t\tfont-size: 1.5rem;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\tmax-height: ${props.imgUrl ? '15rem' : '32rem'};\r\n\t\t\t\t\tline-height: 1.9;\r\n\t\t\t\t\tword-break: break-word;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.image-container {\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tborder-radius: 4px 4px 0 0;\r\n\t\t\t\theight: 18rem;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tdisplay: ${!props.imgUrl && 'none'};\r\n\t\t\t\timg {\r\n\t\t\t\t\tobject-fit: cover;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tborder-radius: 4px 4px 0 0;\r\n\t\t\t\t\t-webkit-transform: scale(1);\r\n\t\t\t\t\t-moz-transform: scale(1);\r\n\t\t\t\t\t-ms-transform: scale(1);\r\n\t\t\t\t\t-o-transform: scale(1);\r\n\t\t\t\t\ttransform: scale(1);\r\n\t\t\t\t\t& :hover {\r\n\t\t\t\t\t\ttransform: scale(1.1);\r\n\t\t\t\t\t\t-webkit-transform: scale(1.1);\r\n\t\t\t\t\t\t-moz-transform: scale(1.1);\r\n\t\t\t\t\t\t-ms-transform: scale(1.1);\r\n\t\t\t\t\t\t-o-transform: scale(1.1);\r\n\t\t\t\t\t\ttransition: 0.3s;\r\n\t\t\t\t\t\t-webkit-transition: 0.3s;\r\n\t\t\t\t\t\t-moz-transition: 0.3s;\r\n\t\t\t\t\t\t-ms-transition: 0.3s;\r\n\t\t\t\t\t\t-o-transition: 0.3s;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t@media screen and (max-width: ${breakpoints.xlarge}) {\r\n\t\t\t\t.image-container {\r\n\t\t\t\t\theight: 15rem;\r\n\t\t\t\t}\r\n\t\t\t\t.li-article {\r\n\t\t\t\t\theight: 22rem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t@media screen and (max-width: ${breakpoints.large}) {\r\n\t\t\t\t.image-container {\r\n\t\t\t\t\t// height: 15rem;\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.li-article {\r\n\t\t\t\t\theight: 27rem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t@media screen and (max-width: ${breakpoints.medium}) {\r\n\t\t\t\t.li-article {\r\n\t\t\t\t\theight: 20rem;\r\n\t\t\t\t\t.post-info {\r\n  \t\t\t\t\tborder-bottom: none;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.pre-content {\r\n\t\t\t\t\t\tmax-height: 6rem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t`}\r\n\r\n\t>\r\n\t\t{props.children}\r\n\t</li>\r\n);\r\n","import styled from 'styled-components';\r\nimport Tag from '../../CommonUI/Tag';\r\n\r\ntype TagsProps = {\r\n  tagArr: string[]\r\n}\r\nconst Tags = ({tagArr}: TagsProps) => {\r\n  return (\r\n    <Wrapper>\r\n      {tagArr.map((tagEle, index) => (\r\n        <Tag key={`${tagEle}_${index}`} tagString={tagEle} />\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`\r\nexport default Tags;","import { AsyncState } from \"../../../lib/Utils/asyncUtils\";\r\nimport { Post } from \"../../../store/modules/post\";\r\nimport { AxiosError } from \"axios\";\r\nimport PostContainer from \"../../../containers/Post/PostContainer\";\r\nimport LoadingPost from \"../Post/LoadingPost\";\r\n\r\ntype PostListsProps = {\r\n  postsList: AsyncState<Post[], AxiosError>\r\n};\r\nconst PostList = ({ postsList }: PostListsProps) => {\r\n  const { data, loading } = postsList;\r\n  if (loading) return <LoadingPost />;\r\n  const list = data.map(item => (\r\n    <PostContainer\r\n      title={item.title}\r\n      preContent={item.subTitle}\r\n      date={item.date}\r\n      tagArr={item.tagArr}\r\n      imgUrl={item.imgUrl}\r\n      id={item.id}\r\n      key={`card-${String(item.date)}-${item.title}`}\r\n    />\r\n  ));\r\n  return <>{list}</>;\r\n};\r\nexport default PostList;","import styled from 'styled-components';\r\nimport { AxiosError } from 'axios';\r\n\r\nimport { breakpoints } from '../../lib/styles/responsive';\r\nimport { Post } from '../../store/modules/post';\r\nimport { AsyncState } from '../../lib/Utils/asyncUtils';\r\nimport PostList from './PostList/PostList';\r\n\r\ntype PostLayoutProps = {\r\n\tpostsList?: AsyncState<Post[], AxiosError>;\r\n};\r\n\r\nconst PostsLayout = ({ postsList }: PostLayoutProps) => (\r\n\t<Layout>\r\n\t\t<ul>\r\n\t\t\t<PostList postsList={postsList} />\r\n\t\t</ul>\r\n\t</Layout>\r\n)\r\n\r\nexport default PostsLayout;\r\n\r\nconst Layout = styled.main`\r\n  width: 90%;\r\n  margin: 3rem auto;\r\n  ul, li, ol {\r\n    list-style: none;\r\n  }\r\n  ul {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-auto-rows: minmax(50rem, auto);\r\n    grid-gap: 2.5rem;\r\n    @media screen and (max-width: ${breakpoints.xlarge}) {\r\n      grid-template-columns: repeat(3, 1fr);\r\n      grid-auto-rows: 45rem;\r\n    }\r\n    @media screen and (max-width: ${breakpoints.large}) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n      grid-auto-rows: 30rem;\r\n    }\r\n    @media screen and (max-width: ${breakpoints.medium}) {\r\n      grid-template-columns: repeat(1, 1fr);\r\n      grid-auto-rows: 23rem;\r\n    }\r\n  }\r\n`;\r\n","export { default as PostsLayout } from './PostsLayout';\r\n","import * as firebase from  'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBLXvVQTnFPYwECmKot63Ww0nTElbPDyfQ\",\r\n  authDomain: \"myblog-672d0.firebaseapp.com\",\r\n  databaseURL: \"https://myblog-672d0.firebaseio.com\",\r\n  projectId: \"myblog-672d0\",\r\n  storageBucket: \"myblog-672d0.appspot.com\",\r\n  messagingSenderId: \"899979036711\",\r\n  appId: \"1:899979036711:web:cd2980d7e7741bc55a6602\",\r\n  measurementId: \"G-B068HWHPHP\"\r\n}\r\nexport function firebaseDB() {\r\n  // Initialize Firebase\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    // firebase.analytics();\r\n  }\r\n  return firebase;\r\n}\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();","import { useState, useCallback } from \"react\";\r\nimport Header from \"../../components/CommonUI/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/modules\";\r\nimport { useRouter } from \"next/router\";\r\nimport { ROUTES } from \"../../lib/Routes/Routes\";\r\n\r\nconst HeaderContainer = () => {\r\n  const { isLogged } = useSelector((state: RootState) => ({\r\n    isLogged: state.loginUI.isLogged,\r\n  }))\r\n  const router = useRouter();\r\n  const [toggle, setToggle] = useState(false);\r\n  \r\n  const handleToggle = useCallback(() => {\r\n    setToggle(!toggle);\r\n  }, [toggle]);\r\n\r\n  return (\r\n    <Header \r\n      isLogged={isLogged} \r\n      toggle={toggle} \r\n      handleToggle={handleToggle}\r\n    />\r\n  )\r\n}\r\nexport default HeaderContainer;","import { useDispatch } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useCallback } from \"react\";\r\nimport routers  from '../../routes';\r\nimport { getPostAsync } from \"../../store/modules/post\";\r\nimport Post from \"../../components/Posts/Post/Post\";\r\n\r\ntype PostContainerProps = {\r\n\ttitle: string;\r\n\tpreContent: string;\r\n\tdate: string;\r\n  imgUrl?: string;\r\n  id: string;\r\n\ttagArr: string[];\r\n};\r\n\r\nconst PostContainer = ({ title, preContent, date, id, imgUrl, tagArr }: PostContainerProps) => {\r\n  const dispatch = useDispatch();\r\n\tconst router = useRouter();\r\n\tconst { pushRoute } = routers.Router;\r\n\tconst reqGetPost = useCallback(\r\n\t\t(id: string) => {\r\n\t\t\ttry {\r\n\t\t\t\tdispatch(getPostAsync.request(id));\r\n\t\t\t\t// router.push(`${ROUTES.devBlog}/${id}`, `${ROUTES.devBlog}/${id}`);\r\n\t\t\t\tpushRoute(`post`, { id });\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n  \r\n  return (\r\n    <Post \r\n      title={title}\r\n      preContent={preContent}\r\n      date={date}\r\n      tagArr={tagArr}\r\n      imgUrl={imgUrl}\r\n      onClick={() => reqGetPost(id)}\r\n    />\r\n  )\r\n}\r\nexport default PostContainer;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport 'firebase/auth';\r\nimport { getPostsListAsync, postAsync } from \"../../store/modules/post\";\r\nimport { RootState } from \"../../store/modules\";\r\nimport { PostsLayout } from \"../../components/Posts\";\r\n\r\nconst limitCnt = 30;\r\nconst PostListContainer = () => {\r\n\r\n  const { postsList, isLogged, reqPost } = useSelector(({ post, loginUI }: RootState) => ({\r\n\t\tpostsList: post.postsList,\r\n\t\treqPost: post.reqPost,\r\n\t\tisLogged: loginUI.isLogged,\r\n\t}));\r\n\tconst dispatch = useDispatch();\r\n\r\n  const reqGetPostsList = useCallback(() => {\r\n\t\ttry {\r\n\t\t\tdispatch(getPostsListAsync.request(limitCnt));\r\n\t\t} catch (e) {\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t},[ dispatch ]);\r\n\r\n  useEffect(() => {\r\n\t\tif (!postsList.data) {\r\n\t\t\treqGetPostsList();\r\n\t\t\t}\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif(reqPost.data) {\r\n\t\t\tdispatch(postAsync.success(null));\r\n\t\t\treqGetPostsList();\r\n\t\t}\r\n\t}, [reqPost.data, dispatch] )\r\n  return (\r\n    <PostsLayout postsList={postsList} />\r\n  );\r\n}\r\n\r\nexport default PostListContainer;","export const ROUTES = {\r\n  about: '/about',\r\n  home: '/',\r\n  devBlog: '/dev/blog',\r\n  editBlog: '/dev/edit',\r\n  write: '/write',\r\n}\r\n\r\nexport enum PATH {\r\n  ABOUT = 'about',\r\n  HOME = 'home',\r\n  DEV_BLOG = 'devBlog',\r\n  EDIT_BLOG = 'editBlog',\r\n  WRITE = 'write',\r\n}","import { AnyAction } from 'redux';\r\nimport { getType, AsyncActionCreatorBuilder } from 'typesafe-actions';\r\nexport type AsyncState<T, E = any> = {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: E | null;\r\n};\r\nexport const asyncState = {\r\n  initial: <T, E = any>(initialData?: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: initialData || null,\r\n    error: null,\r\n  }),\r\n  loading: <T, E = any>(data?: T): AsyncState<T, E> => ({\r\n    loading: true,\r\n    data: data || null,\r\n    error: null\r\n  }),\r\n  success: <T, E = any>(data: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data,\r\n    error: null\r\n  }),\r\n  error: <T, E>(error: E): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n  })\r\n};\r\n\r\ntype AnyAsyncActionCreator = AsyncActionCreatorBuilder<any, any, any>;\r\nexport function transformToArray<AC extends AnyAsyncActionCreator>(\r\n  asyncActionCreator: AC,\r\n) {\r\n  const { request, success, failure } = asyncActionCreator;\r\n  return [request, success, failure];\r\n}\r\n\r\nexport const handleAsyncActions = <S, AC extends AnyAsyncActionCreator, K extends keyof S>(\r\n  type: AC,\r\n  key: K\r\n  ) => {\r\n  return (state: S, action: AnyAction) => {\r\n    const [request, success, failure] = transformToArray(type).map(getType);\r\n    switch (action.type) {\r\n      case request:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.loading(),\r\n        };\r\n      case success:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.success(action.payload),\r\n        };\r\n      case failure:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.error(action.payload),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { AsyncActionCreatorBuilder, PayloadAction } from 'typesafe-actions';\r\n\r\ntype PromiseCreatorFunction<P, T> = ((payload: P) => Promise<T>) | (() => Promise<T>);\r\n\r\nfunction isPayloadAction<P>(action: any): action is PayloadAction<string, P> {\r\n\treturn action.payload !== undefined;\r\n}\r\n\r\nexport default function createAsyncSaga<T1, P1, T2, P2, T3, P3>(\r\n\tasyncActionCreator: AsyncActionCreatorBuilder<[T1, [P1, undefined]], [T2, [P2, undefined]], [T3, [P3, undefined]]>,\r\n\tpromiseCreator: PromiseCreatorFunction<P1, P2>\r\n) {\r\n\treturn function* saga(action: ReturnType<typeof asyncActionCreator.request>) {\r\n\t\ttry {\r\n\t\t\tconst result = isPayloadAction<P1>(action)\r\n\t\t\t? yield call(promiseCreator, action.payload)\r\n\t\t\t: yield call(promiseCreator);\r\n\t\t\tyield put(asyncActionCreator.success(result));\r\n\t\t} catch (e) {\r\n\t\t\tyield put(asyncActionCreator.failure(e));\r\n\t\t}\r\n\t};\r\n}\r\n","import firebase, { provider } from '../../config/init-firebase';\r\n\r\nexport const formatDate = (dateData: string) => {\r\n  const formatted: Date = new Date(dateData);\r\n  const year: number = formatted.getFullYear();\r\n  let month: number | string = formatted.getMonth() + 1;\r\n  let day: number | string = formatted.getDate();\r\n  month = Number(month) < 10 ? `0${month}` : month;\r\n  day = Number(day) < 10 ? `0${day}` : day;\r\n\r\n  return `${year}년 ${month}월 ${day}일`;\r\n};  \r\n\r\nexport const setItem = (key: string, obj: object) => {\r\n  return sessionStorage.setItem(key, JSON.stringify(obj));\r\n};\r\n\r\nexport const getItem = (key: string) => {\r\n  return sessionStorage.getItem(JSON.parse(key));\r\n};\r\n\r\nexport const removeExp = (str: string) => {\r\n  const regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi\r\n  if(regExp.test(str)) {\r\n    const result = str.replace(regExp, '');\r\n    return result;\r\n  } return str;\r\n} \r\n\r\n\r\nexport const logoutFn = () => {\r\n  firebase.auth().signOut().then(function() {\r\n    // Sign-out successful.\r\n    sessionStorage.removeItem(\"idToken\");\r\n  }).catch(function(error) {\r\n    // An error happened.\r\n  });\r\n}\r\n\r\nexport const  setCookie = (name: string, value: any, day: number) => {\r\n  const date = new Date();\r\n  date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\r\n  document.cookie = name + '=' + value + ';expires=' + date.toUTCString() + ';path=/';\r\n  console.log(document.cookie);\r\n};\r\n\r\nexport const deleteCookie = (name: string) => {\r\n  const date = new Date();\r\n  document.cookie = name + \"= \" + \"; expires=\" + date.toUTCString() + \"; path=/\";\r\n  console.log(\"delete\");\r\n}\r\n\r\nexport const checkUser = async () => {\r\n  const user = await firebase.auth().currentUser;\r\n  return user;\r\n}\r\n\r\nexport const loginEmail = (email: string, password: string) => {\r\n  const result = firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((res) => {\r\n      const token = JSON.stringify(res.user);\r\n      setCookie(\"token\", token, 1);\r\n      sessionStorage.setItem(\"idToken\", token);\r\n      return res\r\n  }).catch(err =>  console.log(err));\r\n  return result;\r\n}\r\n\r\n\r\n\r\nexport const checkLogin = () => {\r\n  const tokenObj = document.cookie;\r\n  const isToken = JSON.parse(tokenObj)\r\n  return isToken;\r\n}\r\n","import { Post, PutPostType } from './../../store/modules/post/types';\r\nimport { firebaseDB } from '../../config/init-firebase';\r\n\r\nconst db = firebaseDB().firestore();\r\nconst blogDB = db.collection(\"blogDB\");\r\n\r\nexport const GetPostsList = async <T>(cnt: number): Promise<T[]> => {\r\n\t// const user = firebase.auth().currentUser\r\n\tconst query = blogDB.orderBy(\"date\", \"desc\").limit(cnt);\r\n\tconst response: T[] = await query.get().then((querySnapshot) => {\r\n\t\t\treturn querySnapshot.docs.map((data) => {\r\n\t\t\t\tconst ele: T = { ...data.data(), id: data.id } as unknown as T;\r\n\t\t\t\treturn ele;\r\n\t\t\t});\r\n\t\t}).catch((e) =>  console.log(e)) as T[];\r\n\treturn response;\r\n};\r\n\r\nexport const PutPost = async ({post, id}: PutPostType) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.set(post).then((res) => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t});\r\n\treturn response.data;\r\n};\r\n\r\nexport const PostUpdate = async (data: Post) => {\r\n\tconst response: string = await blogDB.add(data)\r\n\t\t.then((res) => {\r\n\t\t\treturn res.id;\r\n\t\t}).catch((err) => {\r\n\t\t\treturn err;\r\n\t\t});\r\n\treturn response;\r\n};\r\n\r\nexport const GetPost = async (index: string) => {\r\n\tconst query = blogDB.doc(index);\r\n\tconst response = await query.get().then((doc) => {\r\n\t\treturn { \r\n\t\t\tres: { ...doc.data(), id: doc.id } as unknown as Post, \r\n\t\t\tresId: doc.id \r\n\t\t};\r\n\t});\r\n\treturn response;\t\r\n};\r\n\r\nexport const DeletePost = async (id: string) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.delete().then(() => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t})\r\n\treturn response;\r\n};\r\n\r\nexport type LoginType = {\r\n\tmessage: string;\r\n};\r\n","export const colors = {\r\n  defaultBlack: '#343a40',\r\n  gray0: '#F8F9FA',\r\n  gray1: '#F1F3F5',\r\n  gray2: '#E9ECEF',\r\n  gray3: '#DEE2E6',\r\n  gray4: '#CED4DA',\r\n  gray5: '#ADB5BD',\r\n  gray6: '#868E96',\r\n  gray7: '#495057',\r\n  gray8: '#343A40',\r\n  gray9: '#212529',\r\n  violet9: '#5f3dc4',\r\n  mainThemeColor: 'rgba(255, 255, 255, 0.88)',\r\n  whiteL1: '#c6cbd1',\r\n  whiteL2: '#dfe2e5',\r\n  whiteL3: '#f6f8fa',\r\n  whiteColor: '#1f1f1f',  \r\n  markdownCodeColor: '#c2cab9',\r\n};\r\n","export const breakpoints = {\r\n  xlarge: '1200px',\r\n  large: '1024px',\r\n  medium: '768px',\r\n  small: '576px',\r\n  xsmall: '360px',\r\n};\r\n","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { getPostsListAsync } from '../store/modules/post';\r\nimport HeaderContainer from '../containers/Header/HeaderContainer';\r\nimport { NextPageCustom } from '../lib/types/nextCustomTypes';\r\nimport PostListContainer from '../containers/Post/PostListContainer';\r\n\r\nconst Home: NextPageCustom = () => {\r\n  return (\r\n  <>\r\n    <HeaderContainer />\r\n    <PostListContainer />\r\n  </>\r\n)};\r\n\r\nHome.getInitialProps = async ({ store, isServer, req }) => {\r\n  if(isServer) {\r\n    console.log('home');\r\n    await store.dispatch(getPostsListAsync.request(30));\r\n  }\r\n  return { };\r\n};\r\nexport default Home;\r\n","// import Routes from 'next-routes';\r\n\r\n// const routes = new Routes();\r\n\r\n// routes \r\n//   .add('about', 'about')\r\n//   .add('post', 'dev/blog/:id')\r\n//   .add('postEdit', 'dev/edit/:id')\r\n//   .add('write', 'write')\r\n\r\n// export default routes;\r\n\r\nconst routes = module.exports = require('next-routes')()\r\nroutes\r\n  .add('index', '/')\r\n  .add('about', '/about')\r\n  .add('post', 'dev/blog/:id')\r\n  .add('postEdit', 'dev/edit/:id')\r\n  .add('write', 'write')\r\n// export default routes;","import { createAsyncAction } from 'typesafe-actions';\r\nimport { AxiosError } from 'axios';\r\nimport { Post, PutPostType } from './types';\r\n\r\nexport const DELETE_POST = 'post/DELETE_POST';\r\nexport const DELETE_POST_SUCCESS = 'post/DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_ERROR = 'post/DELETE_POST_ERROR';\r\n\r\nexport const EDIT_POST = 'post/EDIT_POST';\r\nexport const EDIT_POST_SUCCESS = 'post/EDIT_POST_SUCCESS';\r\nexport const EDIT_POST_ERROR = 'post/EDIT_POST_ERROR';\r\n\r\nexport const UPDATE_POST = 'post/UPDATE_POST';\r\nexport const UPDATE_POST_SUCCESS = 'post/UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_ERROR = 'post/UPDATE_POST_ERROR';\r\n\r\nexport const GET_POSTS_LIST = 'post/GET_POSTS_LIST';\r\nexport const GET_POSTS_LIST_SUCCESS = 'post/GET_POSTS_LIST_SUCCESS';\r\nexport const GET_POSTS_LIST_ERROR = 'post/GET_POSTS_LIST_ERROR';\r\n\r\nexport const GET_POST = 'post/GET_POST';\r\nexport const GET_POST_SUCCESS = 'post/GET_POST_SUCCESS';\r\nexport const GET_POST_ERROR = 'post/GET_POST_ERROR';\r\n\r\nexport const deletePostAsync = createAsyncAction(\r\n  DELETE_POST,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_ERROR,\r\n)<string, any, AxiosError>();\r\n\r\nexport const getPostsListAsync = createAsyncAction(\r\n  GET_POSTS_LIST,\r\n  GET_POSTS_LIST_SUCCESS,\r\n  GET_POSTS_LIST_ERROR,\r\n)<number, Post[], AxiosError>();\r\n\r\nexport const postAsync = createAsyncAction(\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_ERROR,\r\n)<Post, string, AxiosError<string>>();\r\n\r\nexport const putPostAsync = createAsyncAction(\r\n  EDIT_POST,\r\n  EDIT_POST_SUCCESS,\r\n  EDIT_POST_ERROR,\r\n)<PutPostType, string, AxiosError<string>>();\r\n\r\nexport const getPostAsync = createAsyncAction(\r\n  GET_POST,\r\n  GET_POST_SUCCESS,\r\n  GET_POST_ERROR,\r\n)<string, {res: Post, resId: string}, AxiosError<string>>();","export { default } from './reducers';\r\nexport * from './actions';\r\nexport * from './types';\r\nexport * from './saga';","import { asyncState, transformToArray, handleAsyncActions } from './../../../lib/Utils/asyncUtils';\r\nimport { PostState, PostActions, Post } from './types';\r\nimport { createReducer } from 'typesafe-actions';\r\nimport {\r\n\tgetPostsListAsync,\r\n\tpostAsync,\r\n\tGET_POSTS_LIST,\r\n\tGET_POSTS_LIST_SUCCESS,\r\n\tGET_POSTS_LIST_ERROR,\r\n\tUPDATE_POST,\r\n\tUPDATE_POST_SUCCESS,\r\n\tUPDATE_POST_ERROR,\r\n\tGET_POST,\r\n\tGET_POST_SUCCESS,\r\n\tGET_POST_ERROR\r\n} from './actions';\r\n\r\nconst initialState: PostState = {\r\n\tpostsList: asyncState.initial(),\r\n\treqPost: asyncState.initial(),\r\n\tpost: asyncState.initial(),\r\n};\r\nconst post = createReducer<PostState, PostActions>(initialState, {\r\n\t[GET_POSTS_LIST]: (state) => ({\r\n\t\t...state,\r\n\t\tpostsList: asyncState.loading()\r\n\t}),\r\n\t[GET_POSTS_LIST_SUCCESS]: (state, action) => {\r\n\t\treturn {\r\n\t\t...state,\r\n\t\tpostsList: asyncState.success(action.payload)\r\n\t}},\r\n\t[GET_POSTS_LIST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpostsList: asyncState.error(action.payload)\r\n\t}),\r\n\t[UPDATE_POST]: (state) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.loading()\r\n\t}),\r\n\t[UPDATE_POST_SUCCESS]: (state, action) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.success(action.payload)\r\n\t}),\r\n\t[UPDATE_POST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.error(action.payload)\r\n\t}),\r\n\t[GET_POST]: (state) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.loading(),\r\n\t}),\r\n\t[GET_POST_SUCCESS]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.success(action.payload)\r\n\t}),\r\n\t[GET_POST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.error(action.payload)\r\n\t})\r\n});\r\n\r\n// refactoring code\r\nconst test = createReducer<PostState, PostActions>(initialState).handleAction(\r\n\ttransformToArray(getPostsListAsync),\r\n\thandleAsyncActions(getPostsListAsync, 'postsList')\r\n);\r\n\r\nexport default post;\r\n","import {\r\n\tgetPostsListAsync,\r\n\tGET_POSTS_LIST,\r\n\tEDIT_POST,\r\n\tputPostAsync,\r\n\tpostAsync,\r\n\tUPDATE_POST,\r\n\tgetPostAsync,\r\n\tGET_POST,\r\n  deletePostAsync,\r\n  DELETE_POST\r\n} from './actions';\r\nimport { GetPostsList, PostUpdate, GetPost, PutPost, DeletePost } from '../../../lib/api/apis';\r\nimport { takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport createAsyncSaga from '../../../lib/Utils/createAsyncSaga';\r\nimport { Post } from './types';\r\n\r\nconst deletePostSaga = createAsyncSaga(deletePostAsync, DeletePost);\r\nconst putPostSaga = createAsyncSaga(putPostAsync, PutPost);\r\nconst postUpdateSaga = createAsyncSaga(postAsync, PostUpdate);\r\nconst getPostsListSaga = createAsyncSaga(getPostsListAsync, GetPostsList);\r\nconst getPostSaga = createAsyncSaga(getPostAsync, GetPost);\r\n\r\nexport function* updateSaga() {\r\n\tyield takeLatest(UPDATE_POST, postUpdateSaga);\r\n}\r\nexport function* postSaga() {\r\n\tyield takeEvery(GET_POSTS_LIST, getPostsListSaga);\r\n}\r\nexport function* getOnePostSaga() {\r\n\tyield takeLatest(GET_POST, getPostSaga);\r\n}\r\nexport function* putSaga() {\r\n\tyield takeLatest(EDIT_POST, putPostSaga);\r\n}\r\nexport function* deleteSaga() {\r\n  yield takeLatest(DELETE_POST, deletePostSaga);\r\n}\r\n","module.exports = require(\"@emotion/core\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/auth\");","module.exports = require(\"firebase/firestore\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"styled-components\");","module.exports = require(\"typesafe-actions\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAgCA;;;;;;;;;;;;;;;;;;;;ACxHA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAGA;AACA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;AACA;;;;;;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;ACzBA;AAGA;AAGA;AACA;AAKA;AAAA;AAAA;AAGA;AAAA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAhBA;AAwBA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAjBA;AAmBA;AACA;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;ACpBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AAMA;AAMA;AAMA;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AAFA;AAGA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAlCA;AACA;AAwCA;AAKA;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}